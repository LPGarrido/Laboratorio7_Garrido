

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Apr 03 18:51:49 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0008                     _PORTD	set	8
   295  0007                     _PORTC	set	7
   296  0008                     _PORTDbits	set	8
   297  0001                     _TMR0	set	1
   298  0005                     _PORTA	set	5
   299  0006                     _PORTBbits	set	6
   300  000B                     _INTCONbits	set	11
   301  0096                     _IOCB	set	150
   302  0095                     _WPUB	set	149
   303  0081                     _OPTION_REGbits	set	129
   304  0086                     _TRISB	set	134
   305  0088                     _TRISD	set	136
   306  0087                     _TRISC	set	135
   307  0085                     _TRISA	set	133
   308  008F                     _OSCCONbits	set	143
   309  0189                     _ANSELH	set	393
   310  0188                     _ANSEL	set	392
   311                           
   312                           	psect	cinit
   313  0011                     start_initialization:	
   314                           ; #config settings
   315                           
   316  0011                     __initialization:
   317                           
   318                           ; Clear objects allocated to COMMON
   319  0011  01FA               	clrf	__pbssCOMMON& (0+127)
   320  0012  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   321                           
   322                           ; Clear objects allocated to BANK0
   323  0013  1283               	bcf	3,5	;RP0=0, select bank0
   324  0014  1303               	bcf	3,6	;RP1=0, select bank0
   325  0015  01B6               	clrf	__pbssBANK0& (0+127)
   326  0016  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   327  0017  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   328  0018  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   329  0019  01BA               	clrf	(__pbssBANK0+4)& (0+127)
   330  001A  01BB               	clrf	(__pbssBANK0+5)& (0+127)
   331  001B                     end_of_initialization:	
   332                           ;End of C runtime variable initialization code
   333                           
   334  001B                     __end_of__initialization:
   335  001B  0183               	clrf	3
   336  001C  120A  118A  2A39   	ljmp	_main	;jump to C main() function
   337                           
   338                           	psect	bssCOMMON
   339  007A                     __pbssCOMMON:
   340  007A                     _banderas:
   341  007A                     	ds	1
   342  007B                     _conteo:
   343  007B                     	ds	1
   344                           
   345                           	psect	bssBANK0
   346  0036                     __pbssBANK0:
   347  0036                     _display:
   348  0036                     	ds	3
   349  0039                     _valores:
   350  0039                     	ds	3
   351                           
   352                           	psect	cstackCOMMON
   353  0070                     __pcstackCOMMON:
   354  0070                     ?_RESET_TMR0:
   355  0070                     ??_RESET_TMR0:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_mostrar_valor:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_setup:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_obtener_valor:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_isr:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_main:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_TABLA:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     RESET_TMR0@TMR_VAR:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     mostrar_valor@DISPLAY1:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384  0070                     	ds	1
   385  0071                     mostrar_valor@DISPLAY2:
   386                           
   387                           ; 1 bytes @ 0x1
   388  0071                     	ds	1
   389  0072                     ??_mostrar_valor:
   390                           
   391                           ; 1 bytes @ 0x2
   392  0072                     	ds	2
   393  0074                     mostrar_valor@DISPLAY0:
   394                           
   395                           ; 1 bytes @ 0x4
   396  0074                     	ds	1
   397  0075                     ??_isr:
   398                           
   399                           ; 1 bytes @ 0x5
   400  0075                     	ds	5
   401                           
   402                           	psect	cstackBANK0
   403  0020                     __pcstackBANK0:
   404  0020                     ??_setup:
   405  0020                     ??_TABLA:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0020                     ?___bmul:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0020                     ?___wmul:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0020                     ___bmul@multiplicand:	
   415                           ; 2 bytes @ 0x0
   416                           
   417  0020                     ___wmul@multiplier:	
   418                           ; 1 bytes @ 0x0
   419                           
   420                           
   421                           ; 2 bytes @ 0x0
   422  0020                     	ds	1
   423  0021                     ??___bmul:
   424                           
   425                           ; 1 bytes @ 0x1
   426  0021                     	ds	1
   427  0022                     TABLA@VALOR:
   428  0022                     ___bmul@product:	
   429                           ; 1 bytes @ 0x2
   430                           
   431  0022                     ___wmul@multiplicand:	
   432                           ; 1 bytes @ 0x2
   433                           
   434                           
   435                           ; 2 bytes @ 0x2
   436  0022                     	ds	1
   437  0023                     TABLA@i:
   438  0023                     ___bmul@multiplier:	
   439                           ; 1 bytes @ 0x3
   440                           
   441                           
   442                           ; 1 bytes @ 0x3
   443  0023                     	ds	1
   444  0024                     ?_set_display:
   445  0024                     ??___wmul:	
   446                           ; 1 bytes @ 0x4
   447                           
   448  0024                     set_display@VALORES1:	
   449                           ; 1 bytes @ 0x4
   450                           
   451  0024                     ___wmul@product:	
   452                           ; 1 bytes @ 0x4
   453                           
   454                           
   455                           ; 2 bytes @ 0x4
   456  0024                     	ds	1
   457  0025                     set_display@VALORES2:
   458                           
   459                           ; 1 bytes @ 0x5
   460  0025                     	ds	1
   461  0026                     ??_set_display:
   462  0026                     ?___awdiv:	
   463                           ; 1 bytes @ 0x6
   464                           
   465  0026                     ___awdiv@divisor:	
   466                           ; 2 bytes @ 0x6
   467                           
   468                           
   469                           ; 2 bytes @ 0x6
   470  0026                     	ds	1
   471  0027                     set_display@VALORES0:
   472                           
   473                           ; 1 bytes @ 0x7
   474  0027                     	ds	1
   475  0028                     ___awdiv@dividend:
   476                           
   477                           ; 2 bytes @ 0x8
   478  0028                     	ds	2
   479  002A                     ??___awdiv:
   480                           
   481                           ; 1 bytes @ 0xA
   482  002A                     	ds	1
   483  002B                     ___awdiv@counter:
   484                           
   485                           ; 1 bytes @ 0xB
   486  002B                     	ds	1
   487  002C                     ___awdiv@sign:
   488                           
   489                           ; 1 bytes @ 0xC
   490  002C                     	ds	1
   491  002D                     ___awdiv@quotient:
   492                           
   493                           ; 2 bytes @ 0xD
   494  002D                     	ds	2
   495  002F                     ??_obtener_valor:
   496                           
   497                           ; 1 bytes @ 0xF
   498  002F                     	ds	4
   499  0033                     obtener_valor@VALOR:
   500                           
   501                           ; 1 bytes @ 0x13
   502  0033                     	ds	1
   503  0034                     ??_main:
   504                           
   505                           ; 1 bytes @ 0x14
   506  0034                     	ds	2
   507                           
   508                           	psect	maintext
   509  0239                     __pmaintext:	
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 84 in file "main_lab7.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : B00/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         0       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0
   531 ;;      Temps:          0       2       0       0       0
   532 ;;      Totals:         0       2       0       0       0
   533 ;;Total ram usage:        2 bytes
   534 ;; Hardware stack levels required when called: 4
   535 ;; This function calls:
   536 ;;		_obtener_valor
   537 ;;		_set_display
   538 ;;		_setup
   539 ;; This function is called by:
   540 ;;		Startup code after reset
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544  0239                     _main:	
   545                           ;psect for function _main
   546                           
   547  0239                     l1296:	
   548                           ;incstack = 0
   549                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   550                           
   551                           
   552                           ;main_lab7.c: 85:     setup();
   553  0239  120A  118A  2187  120A  118A  	fcall	_setup
   554  023E                     l46:	
   555                           ;main_lab7.c: 86:     while(1){
   556                           
   557                           
   558                           ;main_lab7.c: 87:         obtener_valor(PORTA);
   559  023E  1283               	bcf	3,5	;RP0=0, select bank0
   560  023F  1303               	bcf	3,6	;RP1=0, select bank0
   561  0240  0805               	movf	5,w	;volatile
   562  0241  120A  118A  20ED  120A  118A  	fcall	_obtener_valor
   563  0246                     l1298:
   564                           
   565                           ;main_lab7.c: 88:         set_display(valores[0],valores[1],valores[2]);
   566  0246  1283               	bcf	3,5	;RP0=0, select bank0
   567  0247  1303               	bcf	3,6	;RP1=0, select bank0
   568  0248  083A               	movf	_valores+1,w
   569  0249  00B4               	movwf	??_main
   570  024A  0834               	movf	??_main,w
   571  024B  00A4               	movwf	set_display@VALORES1
   572  024C  083B               	movf	_valores+2,w
   573  024D  00B5               	movwf	??_main+1
   574  024E  0835               	movf	??_main+1,w
   575  024F  00A5               	movwf	set_display@VALORES2
   576  0250  0839               	movf	_valores,w
   577  0251  120A  118A  2214  120A  118A  	fcall	_set_display
   578  0256  2A3E               	goto	l46
   579  0257  120A  118A  280E   	ljmp	start
   580  025A                     __end_of_main:
   581                           
   582                           	psect	text1
   583  0187                     __ptext1:	
   584 ;; *************** function _setup *****************
   585 ;; Defined at:
   586 ;;		line 10 in file "setup_lab7.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0
   603 ;;      Totals:         0       0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; Hardware stack levels required when called: 2
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614  0187                     _setup:	
   615                           ;psect for function _setup
   616                           
   617  0187                     l1230:	
   618                           ;incstack = 0
   619                           ; Regs used in _setup: [wreg+status,2+status,0]
   620                           
   621                           
   622                           ;setup_lab7.c: 11:     ANSEL = 0;
   623  0187  1683               	bsf	3,5	;RP0=1, select bank3
   624  0188  1703               	bsf	3,6	;RP1=1, select bank3
   625  0189  0188               	clrf	8	;volatile
   626                           
   627                           ;setup_lab7.c: 12:     ANSELH = 0;
   628  018A  0189               	clrf	9	;volatile
   629  018B                     l1232:
   630                           
   631                           ;setup_lab7.c: 14:     OSCCONbits.IRCF = 0b100;
   632  018B  1683               	bsf	3,5	;RP0=1, select bank1
   633  018C  1303               	bcf	3,6	;RP1=0, select bank1
   634  018D  080F               	movf	15,w	;volatile
   635  018E  398F               	andlw	-113
   636  018F  3840               	iorlw	64
   637  0190  008F               	movwf	15	;volatile
   638  0191                     l1234:
   639                           
   640                           ;setup_lab7.c: 15:     OSCCONbits.SCS = 1;
   641  0191  140F               	bsf	15,0	;volatile
   642  0192                     l1236:
   643                           
   644                           ;setup_lab7.c: 17:     TRISA = 0;
   645  0192  0185               	clrf	5	;volatile
   646  0193                     l1238:
   647                           
   648                           ;setup_lab7.c: 18:     PORTA = 0;
   649  0193  1283               	bcf	3,5	;RP0=0, select bank0
   650  0194  1303               	bcf	3,6	;RP1=0, select bank0
   651  0195  0185               	clrf	5	;volatile
   652  0196                     l1240:
   653                           
   654                           ;setup_lab7.c: 19:     TRISC = 0;
   655  0196  1683               	bsf	3,5	;RP0=1, select bank1
   656  0197  1303               	bcf	3,6	;RP1=0, select bank1
   657  0198  0187               	clrf	7	;volatile
   658  0199                     l1242:
   659                           
   660                           ;setup_lab7.c: 20:     PORTC = 0;
   661  0199  1283               	bcf	3,5	;RP0=0, select bank0
   662  019A  1303               	bcf	3,6	;RP1=0, select bank0
   663  019B  0187               	clrf	7	;volatile
   664  019C                     l1244:
   665                           
   666                           ;setup_lab7.c: 21:     TRISD = 0;
   667  019C  1683               	bsf	3,5	;RP0=1, select bank1
   668  019D  1303               	bcf	3,6	;RP1=0, select bank1
   669  019E  0188               	clrf	8	;volatile
   670  019F                     l1246:
   671                           
   672                           ;setup_lab7.c: 22:     PORTD = 0;
   673  019F  1283               	bcf	3,5	;RP0=0, select bank0
   674  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   675  01A1  0188               	clrf	8	;volatile
   676  01A2                     l1248:
   677                           
   678                           ;setup_lab7.c: 23:     TRISB = 0xFF;
   679  01A2  30FF               	movlw	255
   680  01A3  1683               	bsf	3,5	;RP0=1, select bank1
   681  01A4  1303               	bcf	3,6	;RP1=0, select bank1
   682  01A5  0086               	movwf	6	;volatile
   683  01A6                     l1250:
   684                           
   685                           ;setup_lab7.c: 25:     OPTION_REGbits.nRBPU = 0;
   686  01A6  1381               	bcf	1,7	;volatile
   687  01A7                     l1252:
   688                           
   689                           ;setup_lab7.c: 26:     WPUB = 0x03;
   690  01A7  3003               	movlw	3
   691  01A8  0095               	movwf	21	;volatile
   692  01A9                     l1254:
   693                           
   694                           ;setup_lab7.c: 28:     OPTION_REGbits.T0CS = 0;
   695  01A9  1281               	bcf	1,5	;volatile
   696  01AA                     l1256:
   697                           
   698                           ;setup_lab7.c: 29:     OPTION_REGbits.PSA = 0;
   699  01AA  1181               	bcf	1,3	;volatile
   700  01AB                     l1258:
   701                           
   702                           ;setup_lab7.c: 30:     OPTION_REGbits.PS = 0b111;
   703  01AB  3007               	movlw	7
   704  01AC  0481               	iorwf	1,f	;volatile
   705  01AD                     l1260:
   706                           
   707                           ;setup_lab7.c: 31:     TMR0 = 254;
   708  01AD  30FE               	movlw	254
   709  01AE  1283               	bcf	3,5	;RP0=0, select bank0
   710  01AF  1303               	bcf	3,6	;RP1=0, select bank0
   711  01B0  0081               	movwf	1	;volatile
   712  01B1                     l1262:
   713                           
   714                           ;setup_lab7.c: 33:     INTCONbits.GIE = 1;
   715  01B1  178B               	bsf	11,7	;volatile
   716  01B2                     l1264:
   717                           
   718                           ;setup_lab7.c: 34:     INTCONbits.RBIE = 1;
   719  01B2  158B               	bsf	11,3	;volatile
   720  01B3                     l1266:
   721                           
   722                           ;setup_lab7.c: 35:     IOCB = 0x03;
   723  01B3  3003               	movlw	3
   724  01B4  1683               	bsf	3,5	;RP0=1, select bank1
   725  01B5  1303               	bcf	3,6	;RP1=0, select bank1
   726  01B6  0096               	movwf	22	;volatile
   727  01B7                     l1268:
   728                           
   729                           ;setup_lab7.c: 36:     INTCONbits.RBIF = 0;
   730  01B7  100B               	bcf	11,0	;volatile
   731  01B8                     l1270:
   732                           
   733                           ;setup_lab7.c: 37:     INTCONbits.T0IE = 1;
   734  01B8  168B               	bsf	11,5	;volatile
   735  01B9                     l1272:
   736                           
   737                           ;setup_lab7.c: 38:     INTCONbits.T0IF = 0;
   738  01B9  110B               	bcf	11,2	;volatile
   739  01BA                     l122:
   740  01BA  0008               	return
   741  01BB                     __end_of_setup:
   742                           
   743                           	psect	text2
   744  0214                     __ptext2:	
   745 ;; *************** function _set_display *****************
   746 ;; Defined at:
   747 ;;		line 154 in file "main_lab7.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  VALORES0        1    wreg     unsigned char 
   750 ;;  VALORES1        1    4[BANK0 ] unsigned char 
   751 ;;  VALORES2        1    5[BANK0 ] unsigned char 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  VALORES0        1    7[BANK0 ] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       2       0       0       0
   764 ;;      Locals:         0       1       0       0       0
   765 ;;      Temps:          0       1       0       0       0
   766 ;;      Totals:         0       4       0       0       0
   767 ;;Total ram usage:        4 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 3
   770 ;; This function calls:
   771 ;;		_TABLA
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777  0214                     _set_display:	
   778                           ;psect for function _set_display
   779                           
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in _set_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   783                           ;set_display@VALORES0 stored from wreg
   784  0214  1283               	bcf	3,5	;RP0=0, select bank0
   785  0215  1303               	bcf	3,6	;RP1=0, select bank0
   786  0216  00A7               	movwf	set_display@VALORES0
   787  0217                     l1276:
   788                           
   789                           ;main_lab7.c: 155:     display[0] = TABLA(VALORES2);
   790  0217  0825               	movf	set_display@VALORES2,w
   791  0218  120A  118A  2088  120A  118A  	fcall	_TABLA
   792  021D  1283               	bcf	3,5	;RP0=0, select bank0
   793  021E  1303               	bcf	3,6	;RP1=0, select bank0
   794  021F  00A6               	movwf	??_set_display
   795  0220  0826               	movf	??_set_display,w
   796  0221  00B6               	movwf	_display
   797                           
   798                           ;main_lab7.c: 156:     display[1] = TABLA(VALORES1);
   799  0222  0824               	movf	set_display@VALORES1,w
   800  0223  120A  118A  2088  120A  118A  	fcall	_TABLA
   801  0228  1283               	bcf	3,5	;RP0=0, select bank0
   802  0229  1303               	bcf	3,6	;RP1=0, select bank0
   803  022A  00A6               	movwf	??_set_display
   804  022B  0826               	movf	??_set_display,w
   805  022C  00B7               	movwf	_display+1
   806                           
   807                           ;main_lab7.c: 157:     display[2] = TABLA(VALORES0);
   808  022D  0827               	movf	set_display@VALORES0,w
   809  022E  120A  118A  2088  120A  118A  	fcall	_TABLA
   810  0233  1283               	bcf	3,5	;RP0=0, select bank0
   811  0234  1303               	bcf	3,6	;RP1=0, select bank0
   812  0235  00A6               	movwf	??_set_display
   813  0236  0826               	movf	??_set_display,w
   814  0237  00B8               	movwf	_display+2
   815  0238                     l80:
   816  0238  0008               	return
   817  0239                     __end_of_set_display:
   818                           
   819                           	psect	text3
   820  0088                     __ptext3:	
   821 ;; *************** function _TABLA *****************
   822 ;; Defined at:
   823 ;;		line 113 in file "main_lab7.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  VALOR           1    wreg     unsigned char 
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  VALOR           1    2[BANK0 ] unsigned char 
   828 ;;  i               1    3[BANK0 ] unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      unsigned char 
   831 ;; Registers used:
   832 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         0       0       0       0       0
   839 ;;      Locals:         0       2       0       0       0
   840 ;;      Temps:          0       2       0       0       0
   841 ;;      Totals:         0       4       0       0       0
   842 ;;Total ram usage:        4 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; Hardware stack levels required when called: 2
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_set_display
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852  0088                     _TABLA:	
   853                           ;psect for function _TABLA
   854                           
   855                           
   856                           ;incstack = 0
   857                           ; Regs used in _TABLA: [wreg-fsr0h+status,2+status,0]
   858                           ;TABLA@VALOR stored from wreg
   859  0088  1283               	bcf	3,5	;RP0=0, select bank0
   860  0089  1303               	bcf	3,6	;RP1=0, select bank0
   861  008A  00A2               	movwf	TABLA@VALOR
   862  008B                     l1032:
   863                           
   864                           ;main_lab7.c: 114:     uint8_t i=VALOR;
   865  008B  0822               	movf	TABLA@VALOR,w
   866  008C  00A0               	movwf	??_TABLA
   867  008D  0820               	movf	??_TABLA,w
   868  008E  00A3               	movwf	TABLA@i
   869                           
   870                           ;main_lab7.c: 115:     switch (i)
   871  008F  28B2               	goto	l1104
   872  0090                     l1034:
   873                           
   874                           ;main_lab7.c: 118:              return 0b00111111;
   875  0090  303F               	movlw	63
   876  0091  28EC               	goto	l60
   877  0092                     l1038:
   878                           
   879                           ;main_lab7.c: 120:              return 0b00000110;
   880  0092  3006               	movlw	6
   881  0093  28EC               	goto	l60
   882  0094                     l1042:
   883                           
   884                           ;main_lab7.c: 122:              return 0b01011011;
   885  0094  305B               	movlw	91
   886  0095  28EC               	goto	l60
   887  0096                     l1046:
   888                           
   889                           ;main_lab7.c: 124:              return 0b01001111;
   890  0096  304F               	movlw	79
   891  0097  28EC               	goto	l60
   892  0098                     l1050:
   893                           
   894                           ;main_lab7.c: 126:              return 0b01100110;
   895  0098  3066               	movlw	102
   896  0099  28EC               	goto	l60
   897  009A                     l1054:
   898                           
   899                           ;main_lab7.c: 128:              return 0b01101101;
   900  009A  306D               	movlw	109
   901  009B  28EC               	goto	l60
   902  009C                     l1058:
   903                           
   904                           ;main_lab7.c: 130:              return 0b01111101;
   905  009C  307D               	movlw	125
   906  009D  28EC               	goto	l60
   907  009E                     l1062:
   908                           
   909                           ;main_lab7.c: 132:              return 0b00000111;
   910  009E  3007               	movlw	7
   911  009F  28EC               	goto	l60
   912  00A0                     l1066:
   913                           
   914                           ;main_lab7.c: 134:              return 0b01111111;
   915  00A0  307F               	movlw	127
   916  00A1  28EC               	goto	l60
   917  00A2                     l1070:
   918                           
   919                           ;main_lab7.c: 136:              return 0b01101111;
   920  00A2  306F               	movlw	111
   921  00A3  28EC               	goto	l60
   922  00A4                     l1074:
   923                           
   924                           ;main_lab7.c: 138:              return 0b01110111;
   925  00A4  3077               	movlw	119
   926  00A5  28EC               	goto	l60
   927  00A6                     l1078:
   928                           
   929                           ;main_lab7.c: 140:              return 0b01111100;
   930  00A6  307C               	movlw	124
   931  00A7  28EC               	goto	l60
   932  00A8                     l1082:
   933                           
   934                           ;main_lab7.c: 142:              return 0b00111001;
   935  00A8  3039               	movlw	57
   936  00A9  28EC               	goto	l60
   937  00AA                     l1086:
   938                           
   939                           ;main_lab7.c: 144:              return 0b01011110;
   940  00AA  305E               	movlw	94
   941  00AB  28EC               	goto	l60
   942  00AC                     l1090:
   943                           
   944                           ;main_lab7.c: 146:              return 0b01111001;
   945  00AC  3079               	movlw	121
   946  00AD  28EC               	goto	l60
   947  00AE                     l1094:
   948                           
   949                           ;main_lab7.c: 148:              return 0b01110001;
   950  00AE  3071               	movlw	113
   951  00AF  28EC               	goto	l60
   952  00B0                     l1098:
   953                           
   954                           ;main_lab7.c: 150:              return 0b10000000;
   955  00B0  3080               	movlw	128
   956  00B1  28EC               	goto	l60
   957  00B2                     l1104:
   958  00B2  0823               	movf	TABLA@i,w
   959  00B3  00A0               	movwf	??_TABLA
   960  00B4  01A1               	clrf	??_TABLA+1
   961                           
   962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   963                           ; Switch size 1, requested type "simple"
   964                           ; Number of cases is 1, Range of values is 0 to 0
   965                           ; switch strategies available:
   966                           ; Name         Instructions Cycles
   967                           ; simple_byte            4     3 (average)
   968                           ; direct_byte           11     8 (fixed)
   969                           ; jumptable            260     6 (fixed)
   970                           ;	Chosen strategy is simple_byte
   971  00B5  0821               	movf	??_TABLA+1,w
   972  00B6  3A00               	xorlw	0	; case 0
   973  00B7  1903               	skipnz
   974  00B8  28BA               	goto	l1350
   975  00B9  28B0               	goto	l1098
   976  00BA                     l1350:
   977                           
   978                           ; Switch size 1, requested type "simple"
   979                           ; Number of cases is 16, Range of values is 0 to 15
   980                           ; switch strategies available:
   981                           ; Name         Instructions Cycles
   982                           ; simple_byte           49    25 (average)
   983                           ; direct_byte           56     8 (fixed)
   984                           ; jumptable            260     6 (fixed)
   985                           ;	Chosen strategy is simple_byte
   986  00BA  0820               	movf	??_TABLA,w
   987  00BB  3A00               	xorlw	0	; case 0
   988  00BC  1903               	skipnz
   989  00BD  2890               	goto	l1034
   990  00BE  3A01               	xorlw	1	; case 1
   991  00BF  1903               	skipnz
   992  00C0  2892               	goto	l1038
   993  00C1  3A03               	xorlw	3	; case 2
   994  00C2  1903               	skipnz
   995  00C3  2894               	goto	l1042
   996  00C4  3A01               	xorlw	1	; case 3
   997  00C5  1903               	skipnz
   998  00C6  2896               	goto	l1046
   999  00C7  3A07               	xorlw	7	; case 4
  1000  00C8  1903               	skipnz
  1001  00C9  2898               	goto	l1050
  1002  00CA  3A01               	xorlw	1	; case 5
  1003  00CB  1903               	skipnz
  1004  00CC  289A               	goto	l1054
  1005  00CD  3A03               	xorlw	3	; case 6
  1006  00CE  1903               	skipnz
  1007  00CF  289C               	goto	l1058
  1008  00D0  3A01               	xorlw	1	; case 7
  1009  00D1  1903               	skipnz
  1010  00D2  289E               	goto	l1062
  1011  00D3  3A0F               	xorlw	15	; case 8
  1012  00D4  1903               	skipnz
  1013  00D5  28A0               	goto	l1066
  1014  00D6  3A01               	xorlw	1	; case 9
  1015  00D7  1903               	skipnz
  1016  00D8  28A2               	goto	l1070
  1017  00D9  3A03               	xorlw	3	; case 10
  1018  00DA  1903               	skipnz
  1019  00DB  28A4               	goto	l1074
  1020  00DC  3A01               	xorlw	1	; case 11
  1021  00DD  1903               	skipnz
  1022  00DE  28A6               	goto	l1078
  1023  00DF  3A07               	xorlw	7	; case 12
  1024  00E0  1903               	skipnz
  1025  00E1  28A8               	goto	l1082
  1026  00E2  3A01               	xorlw	1	; case 13
  1027  00E3  1903               	skipnz
  1028  00E4  28AA               	goto	l1086
  1029  00E5  3A03               	xorlw	3	; case 14
  1030  00E6  1903               	skipnz
  1031  00E7  28AC               	goto	l1090
  1032  00E8  3A01               	xorlw	1	; case 15
  1033  00E9  1903               	skipnz
  1034  00EA  28AE               	goto	l1094
  1035  00EB  28B0               	goto	l1098
  1036  00EC                     l60:
  1037  00EC  0008               	return
  1038  00ED                     __end_of_TABLA:
  1039                           
  1040                           	psect	text4
  1041  00ED                     __ptext4:	
  1042 ;; *************** function _obtener_valor *****************
  1043 ;; Defined at:
  1044 ;;		line 107 in file "main_lab7.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  VALOR           1    wreg     unsigned char 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  VALOR           1   19[BANK0 ] unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         0       1       0       0       0
  1060 ;;      Temps:          0       4       0       0       0
  1061 ;;      Totals:         0       5       0       0       0
  1062 ;;Total ram usage:        5 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 3
  1065 ;; This function calls:
  1066 ;;		___awdiv
  1067 ;;		___bmul
  1068 ;;		___wmul
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074  00ED                     _obtener_valor:	
  1075                           ;psect for function _obtener_valor
  1076                           
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in _obtener_valor: [wreg+status,2+status,0+pclath+cstack]
  1080                           ;obtener_valor@VALOR stored from wreg
  1081  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1082  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1083  00EF  00B3               	movwf	obtener_valor@VALOR
  1084  00F0                     l1274:
  1085                           
  1086                           ;main_lab7.c: 108:     valores[2] = VALOR/100;
  1087  00F0  3064               	movlw	100
  1088  00F1  00A6               	movwf	___awdiv@divisor
  1089  00F2  3000               	movlw	0
  1090  00F3  00A7               	movwf	___awdiv@divisor+1
  1091  00F4  0833               	movf	obtener_valor@VALOR,w
  1092  00F5  00AF               	movwf	??_obtener_valor
  1093  00F6  01B0               	clrf	??_obtener_valor+1
  1094  00F7  082F               	movf	??_obtener_valor,w
  1095  00F8  00A8               	movwf	___awdiv@dividend
  1096  00F9  0830               	movf	??_obtener_valor+1,w
  1097  00FA  00A9               	movwf	___awdiv@dividend+1
  1098  00FB  120A  118A  201F  120A  118A  	fcall	___awdiv
  1099  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0102  0826               	movf	?___awdiv,w
  1102  0103  00B1               	movwf	??_obtener_valor+2
  1103  0104  0831               	movf	??_obtener_valor+2,w
  1104  0105  00BB               	movwf	_valores+2
  1105                           
  1106                           ;main_lab7.c: 109:     valores[1] = (VALOR-valores[2]*100)/10;
  1107  0106  300A               	movlw	10
  1108  0107  00A6               	movwf	___awdiv@divisor
  1109  0108  3000               	movlw	0
  1110  0109  00A7               	movwf	___awdiv@divisor+1
  1111  010A  083B               	movf	_valores+2,w
  1112  010B  00AF               	movwf	??_obtener_valor
  1113  010C  01B0               	clrf	??_obtener_valor+1
  1114  010D  082F               	movf	??_obtener_valor,w
  1115  010E  00A0               	movwf	___wmul@multiplier
  1116  010F  0830               	movf	??_obtener_valor+1,w
  1117  0110  00A1               	movwf	___wmul@multiplier+1
  1118  0111  309C               	movlw	156
  1119  0112  00A2               	movwf	___wmul@multiplicand
  1120  0113  30FF               	movlw	255
  1121  0114  00A3               	movwf	___wmul@multiplicand+1
  1122  0115  120A  118A  21ED  120A  118A  	fcall	___wmul
  1123  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1124  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1125  011C  0833               	movf	obtener_valor@VALOR,w
  1126  011D  0720               	addwf	?___wmul,w
  1127  011E  00A8               	movwf	___awdiv@dividend
  1128  011F  0821               	movf	?___wmul+1,w
  1129  0120  1803               	skipnc
  1130  0121  0A21               	incf	?___wmul+1,w
  1131  0122  00A9               	movwf	___awdiv@dividend+1
  1132  0123  120A  118A  201F  120A  118A  	fcall	___awdiv
  1133  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1135  012A  0826               	movf	?___awdiv,w
  1136  012B  00B1               	movwf	??_obtener_valor+2
  1137  012C  0831               	movf	??_obtener_valor+2,w
  1138  012D  00BA               	movwf	_valores+1
  1139                           
  1140                           ;main_lab7.c: 110:     valores[0] = VALOR-valores[2]*100-valores[1]*10;
  1141  012E  309C               	movlw	156
  1142  012F  00AF               	movwf	??_obtener_valor
  1143  0130  082F               	movf	??_obtener_valor,w
  1144  0131  00A0               	movwf	___bmul@multiplicand
  1145  0132  083B               	movf	_valores+2,w
  1146  0133  120A  118A  225A  120A  118A  	fcall	___bmul
  1147  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1149  013A  00B0               	movwf	??_obtener_valor+1
  1150  013B  30F6               	movlw	246
  1151  013C  00B1               	movwf	??_obtener_valor+2
  1152  013D  0831               	movf	??_obtener_valor+2,w
  1153  013E  00A0               	movwf	___bmul@multiplicand
  1154  013F  083A               	movf	_valores+1,w
  1155  0140  120A  118A  225A  120A  118A  	fcall	___bmul
  1156  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0147  0730               	addwf	??_obtener_valor+1,w
  1159  0148  0733               	addwf	obtener_valor@VALOR,w
  1160  0149  00B2               	movwf	??_obtener_valor+3
  1161  014A  0832               	movf	??_obtener_valor+3,w
  1162  014B  00B9               	movwf	_valores
  1163  014C                     l55:
  1164  014C  0008               	return
  1165  014D                     __end_of_obtener_valor:
  1166                           
  1167                           	psect	text5
  1168  01ED                     __ptext5:	
  1169 ;; *************** function ___wmul *****************
  1170 ;; Defined at:
  1171 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1174 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  product         2    4[BANK0 ] unsigned int 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  2    0[BANK0 ] unsigned int 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1186 ;;      Params:         0       4       0       0       0
  1187 ;;      Locals:         0       2       0       0       0
  1188 ;;      Temps:          0       0       0       0       0
  1189 ;;      Totals:         0       6       0       0       0
  1190 ;;Total ram usage:        6 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; Hardware stack levels required when called: 2
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_obtener_valor
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200  01ED                     ___wmul:	
  1201                           ;psect for function ___wmul
  1202                           
  1203  01ED                     l1110:	
  1204                           ;incstack = 0
  1205                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1206                           
  1207  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1208  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1209  01EF  01A4               	clrf	___wmul@product
  1210  01F0  01A5               	clrf	___wmul@product+1
  1211  01F1                     l1112:
  1212  01F1  1C20               	btfss	___wmul@multiplier,0
  1213  01F2  29F4               	goto	u211
  1214  01F3  29F5               	goto	u210
  1215  01F4                     u211:
  1216  01F4  29FB               	goto	l208
  1217  01F5                     u210:
  1218  01F5                     l1114:
  1219  01F5  0822               	movf	___wmul@multiplicand,w
  1220  01F6  07A4               	addwf	___wmul@product,f
  1221  01F7  1803               	skipnc
  1222  01F8  0AA5               	incf	___wmul@product+1,f
  1223  01F9  0823               	movf	___wmul@multiplicand+1,w
  1224  01FA  07A5               	addwf	___wmul@product+1,f
  1225  01FB                     l208:
  1226  01FB  3001               	movlw	1
  1227  01FC                     u225:
  1228  01FC  1003               	clrc
  1229  01FD  0DA2               	rlf	___wmul@multiplicand,f
  1230  01FE  0DA3               	rlf	___wmul@multiplicand+1,f
  1231  01FF  3EFF               	addlw	-1
  1232  0200  1D03               	skipz
  1233  0201  29FC               	goto	u225
  1234  0202                     l1116:
  1235  0202  3001               	movlw	1
  1236  0203                     u235:
  1237  0203  1003               	clrc
  1238  0204  0CA1               	rrf	___wmul@multiplier+1,f
  1239  0205  0CA0               	rrf	___wmul@multiplier,f
  1240  0206  3EFF               	addlw	-1
  1241  0207  1D03               	skipz
  1242  0208  2A03               	goto	u235
  1243  0209                     l1118:
  1244  0209  0820               	movf	___wmul@multiplier,w
  1245  020A  0421               	iorwf	___wmul@multiplier+1,w
  1246  020B  1D03               	btfss	3,2
  1247  020C  2A0E               	goto	u241
  1248  020D  2A0F               	goto	u240
  1249  020E                     u241:
  1250  020E  29F1               	goto	l1112
  1251  020F                     u240:
  1252  020F                     l1120:
  1253  020F  0825               	movf	___wmul@product+1,w
  1254  0210  00A1               	movwf	?___wmul+1
  1255  0211  0824               	movf	___wmul@product,w
  1256  0212  00A0               	movwf	?___wmul
  1257  0213                     l210:
  1258  0213  0008               	return
  1259  0214                     __end_of___wmul:
  1260                           
  1261                           	psect	text6
  1262  025A                     __ptext6:	
  1263 ;; *************** function ___bmul *****************
  1264 ;; Defined at:
  1265 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  multiplier      1    wreg     unsigned char 
  1268 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1271 ;;  product         1    2[BANK0 ] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      unsigned char 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       1       0       0       0
  1282 ;;      Locals:         0       2       0       0       0
  1283 ;;      Temps:          0       1       0       0       0
  1284 ;;      Totals:         0       4       0       0       0
  1285 ;;Total ram usage:        4 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 2
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_obtener_valor
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295  025A                     ___bmul:	
  1296                           ;psect for function ___bmul
  1297                           
  1298                           
  1299                           ;incstack = 0
  1300                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1301                           ;___bmul@multiplier stored from wreg
  1302  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1303  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1304  025C  00A3               	movwf	___bmul@multiplier
  1305  025D                     l1124:
  1306  025D  01A2               	clrf	___bmul@product
  1307  025E                     l1126:
  1308  025E  1C23               	btfss	___bmul@multiplier,0
  1309  025F  2A61               	goto	u251
  1310  0260  2A62               	goto	u250
  1311  0261                     u251:
  1312  0261  2A66               	goto	l1130
  1313  0262                     u250:
  1314  0262                     l1128:
  1315  0262  0820               	movf	___bmul@multiplicand,w
  1316  0263  00A1               	movwf	??___bmul
  1317  0264  0821               	movf	??___bmul,w
  1318  0265  07A2               	addwf	___bmul@product,f
  1319  0266                     l1130:
  1320  0266  1003               	clrc
  1321  0267  0DA0               	rlf	___bmul@multiplicand,f
  1322  0268                     l1132:
  1323  0268  1003               	clrc
  1324  0269  0CA3               	rrf	___bmul@multiplier,f
  1325  026A  0823               	movf	___bmul@multiplier,w
  1326  026B  1D03               	btfss	3,2
  1327  026C  2A6E               	goto	u261
  1328  026D  2A6F               	goto	u260
  1329  026E                     u261:
  1330  026E  2A5E               	goto	l1126
  1331  026F                     u260:
  1332  026F                     l1134:
  1333  026F  0822               	movf	___bmul@product,w
  1334  0270                     l234:
  1335  0270  0008               	return
  1336  0271                     __end_of___bmul:
  1337                           
  1338                           	psect	text7
  1339  001F                     __ptext7:	
  1340 ;; *************** function ___awdiv *****************
  1341 ;; Defined at:
  1342 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  divisor         2    6[BANK0 ] int 
  1345 ;;  dividend        2    8[BANK0 ] int 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  quotient        2   13[BANK0 ] int 
  1348 ;;  sign            1   12[BANK0 ] unsigned char 
  1349 ;;  counter         1   11[BANK0 ] unsigned char 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  2    6[BANK0 ] int 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       4       0       0       0
  1360 ;;      Locals:         0       4       0       0       0
  1361 ;;      Temps:          0       1       0       0       0
  1362 ;;      Totals:         0       9       0       0       0
  1363 ;;Total ram usage:        9 bytes
  1364 ;; Hardware stack levels used: 1
  1365 ;; Hardware stack levels required when called: 2
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_obtener_valor
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373  001F                     ___awdiv:	
  1374                           ;psect for function ___awdiv
  1375                           
  1376  001F                     l1138:	
  1377                           ;incstack = 0
  1378                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1379                           
  1380  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1381  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0021  01AC               	clrf	___awdiv@sign
  1383  0022                     l1140:
  1384  0022  1FA7               	btfss	___awdiv@divisor+1,7
  1385  0023  2825               	goto	u271
  1386  0024  2826               	goto	u270
  1387  0025                     u271:
  1388  0025  282D               	goto	l1146
  1389  0026                     u270:
  1390  0026                     l1142:
  1391  0026  09A6               	comf	___awdiv@divisor,f
  1392  0027  09A7               	comf	___awdiv@divisor+1,f
  1393  0028  0AA6               	incf	___awdiv@divisor,f
  1394  0029  1903               	skipnz
  1395  002A  0AA7               	incf	___awdiv@divisor+1,f
  1396  002B                     l1144:
  1397  002B  01AC               	clrf	___awdiv@sign
  1398  002C  0AAC               	incf	___awdiv@sign,f
  1399  002D                     l1146:
  1400  002D  1FA9               	btfss	___awdiv@dividend+1,7
  1401  002E  2830               	goto	u281
  1402  002F  2831               	goto	u280
  1403  0030                     u281:
  1404  0030  283A               	goto	l1152
  1405  0031                     u280:
  1406  0031                     l1148:
  1407  0031  09A8               	comf	___awdiv@dividend,f
  1408  0032  09A9               	comf	___awdiv@dividend+1,f
  1409  0033  0AA8               	incf	___awdiv@dividend,f
  1410  0034  1903               	skipnz
  1411  0035  0AA9               	incf	___awdiv@dividend+1,f
  1412  0036                     l1150:
  1413  0036  3001               	movlw	1
  1414  0037  00AA               	movwf	??___awdiv
  1415  0038  082A               	movf	??___awdiv,w
  1416  0039  06AC               	xorwf	___awdiv@sign,f
  1417  003A                     l1152:
  1418  003A  01AD               	clrf	___awdiv@quotient
  1419  003B  01AE               	clrf	___awdiv@quotient+1
  1420  003C                     l1154:
  1421  003C  0826               	movf	___awdiv@divisor,w
  1422  003D  0427               	iorwf	___awdiv@divisor+1,w
  1423  003E  1903               	btfsc	3,2
  1424  003F  2841               	goto	u291
  1425  0040  2842               	goto	u290
  1426  0041                     u291:
  1427  0041  2879               	goto	l1174
  1428  0042                     u290:
  1429  0042                     l1156:
  1430  0042  01AB               	clrf	___awdiv@counter
  1431  0043  0AAB               	incf	___awdiv@counter,f
  1432  0044  2850               	goto	l1162
  1433  0045                     l1158:
  1434  0045  3001               	movlw	1
  1435  0046                     u305:
  1436  0046  1003               	clrc
  1437  0047  0DA6               	rlf	___awdiv@divisor,f
  1438  0048  0DA7               	rlf	___awdiv@divisor+1,f
  1439  0049  3EFF               	addlw	-1
  1440  004A  1D03               	skipz
  1441  004B  2846               	goto	u305
  1442  004C                     l1160:
  1443  004C  3001               	movlw	1
  1444  004D  00AA               	movwf	??___awdiv
  1445  004E  082A               	movf	??___awdiv,w
  1446  004F  07AB               	addwf	___awdiv@counter,f
  1447  0050                     l1162:
  1448  0050  1FA7               	btfss	___awdiv@divisor+1,7
  1449  0051  2853               	goto	u311
  1450  0052  2854               	goto	u310
  1451  0053                     u311:
  1452  0053  2845               	goto	l1158
  1453  0054                     u310:
  1454  0054                     l1164:
  1455  0054  3001               	movlw	1
  1456  0055                     u325:
  1457  0055  1003               	clrc
  1458  0056  0DAD               	rlf	___awdiv@quotient,f
  1459  0057  0DAE               	rlf	___awdiv@quotient+1,f
  1460  0058  3EFF               	addlw	-1
  1461  0059  1D03               	skipz
  1462  005A  2855               	goto	u325
  1463  005B  0827               	movf	___awdiv@divisor+1,w
  1464  005C  0229               	subwf	___awdiv@dividend+1,w
  1465  005D  1D03               	skipz
  1466  005E  2861               	goto	u335
  1467  005F  0826               	movf	___awdiv@divisor,w
  1468  0060  0228               	subwf	___awdiv@dividend,w
  1469  0061                     u335:
  1470  0061  1C03               	skipc
  1471  0062  2864               	goto	u331
  1472  0063  2865               	goto	u330
  1473  0064                     u331:
  1474  0064  286C               	goto	l1170
  1475  0065                     u330:
  1476  0065                     l1166:
  1477  0065  0826               	movf	___awdiv@divisor,w
  1478  0066  02A8               	subwf	___awdiv@dividend,f
  1479  0067  0827               	movf	___awdiv@divisor+1,w
  1480  0068  1C03               	skipc
  1481  0069  03A9               	decf	___awdiv@dividend+1,f
  1482  006A  02A9               	subwf	___awdiv@dividend+1,f
  1483  006B                     l1168:
  1484  006B  142D               	bsf	___awdiv@quotient,0
  1485  006C                     l1170:
  1486  006C  3001               	movlw	1
  1487  006D                     u345:
  1488  006D  1003               	clrc
  1489  006E  0CA7               	rrf	___awdiv@divisor+1,f
  1490  006F  0CA6               	rrf	___awdiv@divisor,f
  1491  0070  3EFF               	addlw	-1
  1492  0071  1D03               	skipz
  1493  0072  286D               	goto	u345
  1494  0073                     l1172:
  1495  0073  3001               	movlw	1
  1496  0074  02AB               	subwf	___awdiv@counter,f
  1497  0075  1D03               	btfss	3,2
  1498  0076  2878               	goto	u351
  1499  0077  2879               	goto	u350
  1500  0078                     u351:
  1501  0078  2854               	goto	l1164
  1502  0079                     u350:
  1503  0079                     l1174:
  1504  0079  082C               	movf	___awdiv@sign,w
  1505  007A  1903               	btfsc	3,2
  1506  007B  287D               	goto	u361
  1507  007C  287E               	goto	u360
  1508  007D                     u361:
  1509  007D  2883               	goto	l1178
  1510  007E                     u360:
  1511  007E                     l1176:
  1512  007E  09AD               	comf	___awdiv@quotient,f
  1513  007F  09AE               	comf	___awdiv@quotient+1,f
  1514  0080  0AAD               	incf	___awdiv@quotient,f
  1515  0081  1903               	skipnz
  1516  0082  0AAE               	incf	___awdiv@quotient+1,f
  1517  0083                     l1178:
  1518  0083  082E               	movf	___awdiv@quotient+1,w
  1519  0084  00A7               	movwf	?___awdiv+1
  1520  0085  082D               	movf	___awdiv@quotient,w
  1521  0086  00A6               	movwf	?___awdiv
  1522  0087                     l361:
  1523  0087  0008               	return
  1524  0088                     __end_of___awdiv:
  1525                           
  1526                           	psect	text8
  1527  014D                     __ptext8:	
  1528 ;; *************** function _isr *****************
  1529 ;; Defined at:
  1530 ;;		line 65 in file "main_lab7.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1544 ;;      Params:         0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0
  1546 ;;      Temps:          5       0       0       0       0
  1547 ;;      Totals:         5       0       0       0       0
  1548 ;;Total ram usage:        5 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; Hardware stack levels required when called: 1
  1551 ;; This function calls:
  1552 ;;		_RESET_TMR0
  1553 ;;		_mostrar_valor
  1554 ;; This function is called by:
  1555 ;;		Interrupt level 1
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559  014D                     _isr:	
  1560                           ;psect for function _isr
  1561                           
  1562  014D                     i1l1280:
  1563                           
  1564                           ;main_lab7.c: 66:     if(INTCONbits.RBIF){
  1565  014D  1C0B               	btfss	11,0	;volatile
  1566  014E  2950               	goto	u37_21
  1567  014F  2951               	goto	u37_20
  1568  0150                     u37_21:
  1569  0150  2964               	goto	i1l35
  1570  0151                     u37_20:
  1571  0151                     i1l1282:
  1572                           
  1573                           ;main_lab7.c: 67:         if(!PORTBbits.RB0)
  1574  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1575  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0153  1806               	btfsc	6,0	;volatile
  1577  0154  2956               	goto	u38_21
  1578  0155  2957               	goto	u38_20
  1579  0156                     u38_21:
  1580  0156  295C               	goto	i1l36
  1581  0157                     u38_20:
  1582  0157                     i1l1284:
  1583                           
  1584                           ;main_lab7.c: 68:             PORTA++;
  1585  0157  3001               	movlw	1
  1586  0158  00F5               	movwf	??_isr
  1587  0159  0875               	movf	??_isr,w
  1588  015A  0785               	addwf	5,f	;volatile
  1589  015B  2962               	goto	i1l1288
  1590  015C                     i1l36:	
  1591                           ;main_lab7.c: 69:         else if (!PORTBbits.RB1)
  1592                           
  1593  015C  1886               	btfsc	6,1	;volatile
  1594  015D  295F               	goto	u39_21
  1595  015E  2960               	goto	u39_20
  1596  015F                     u39_21:
  1597  015F  2962               	goto	i1l1288
  1598  0160                     u39_20:
  1599  0160                     i1l1286:
  1600                           
  1601                           ;main_lab7.c: 70:             PORTA--;
  1602  0160  3001               	movlw	1
  1603  0161  0285               	subwf	5,f	;volatile
  1604  0162                     i1l1288:
  1605                           
  1606                           ;main_lab7.c: 71:         INTCONbits.RBIF = 0;
  1607  0162  100B               	bcf	11,0	;volatile
  1608                           
  1609                           ;main_lab7.c: 72:     }
  1610  0163  297E               	goto	i1l41
  1611  0164                     i1l35:	
  1612                           ;main_lab7.c: 73:     else if (INTCONbits.T0IF){
  1613                           
  1614  0164  1D0B               	btfss	11,2	;volatile
  1615  0165  2967               	goto	u40_21
  1616  0166  2968               	goto	u40_20
  1617  0167                     u40_21:
  1618  0167  297E               	goto	i1l41
  1619  0168                     u40_20:
  1620  0168                     i1l1290:
  1621                           
  1622                           ;main_lab7.c: 74:         RESET_TMR0(254);
  1623  0168  30FE               	movlw	254
  1624  0169  120A  118A  2271  120A  118A  	fcall	_RESET_TMR0
  1625  016E                     i1l1292:
  1626                           
  1627                           ;main_lab7.c: 76:         mostrar_valor(display[0],display[1],display[2]);
  1628  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1629  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1630  0170  0837               	movf	_display+1,w
  1631  0171  00F5               	movwf	??_isr
  1632  0172  0875               	movf	??_isr,w
  1633  0173  00F0               	movwf	mostrar_valor@DISPLAY1
  1634  0174  0838               	movf	_display+2,w
  1635  0175  00F6               	movwf	??_isr+1
  1636  0176  0876               	movf	??_isr+1,w
  1637  0177  00F1               	movwf	mostrar_valor@DISPLAY2
  1638  0178  0836               	movf	_display,w
  1639  0179  120A  118A  21BB  120A  118A  	fcall	_mostrar_valor
  1640  017E                     i1l41:
  1641  017E  0879               	movf	??_isr+4,w
  1642  017F  008A               	movwf	10
  1643  0180  0878               	movf	??_isr+3,w
  1644  0181  0084               	movwf	4
  1645  0182  0E77               	swapf	??_isr+2,w
  1646  0183  0083               	movwf	3
  1647  0184  0EFE               	swapf	btemp,f
  1648  0185  0E7E               	swapf	btemp,w
  1649  0186  0009               	retfie
  1650  0187                     __end_of_isr:
  1651                           
  1652                           	psect	intentry
  1653  0004                     __pintentry:	
  1654                           ;incstack = 0
  1655                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1656                           
  1657  0004                     interrupt_function:
  1658  007E                     saved_w	set	btemp
  1659  0004  00FE               	movwf	btemp
  1660  0005  0E03               	swapf	3,w
  1661  0006  00F7               	movwf	??_isr+2
  1662  0007  0804               	movf	4,w
  1663  0008  00F8               	movwf	??_isr+3
  1664  0009  080A               	movf	10,w
  1665  000A  00F9               	movwf	??_isr+4
  1666  000B  120A  118A  294D   	ljmp	_isr
  1667                           
  1668                           	psect	text9
  1669  01BB                     __ptext9:	
  1670 ;; *************** function _mostrar_valor *****************
  1671 ;; Defined at:
  1672 ;;		line 161 in file "main_lab7.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  DISPLAY0        1    wreg     unsigned char 
  1675 ;;  DISPLAY1        1    0[COMMON] unsigned char 
  1676 ;;  DISPLAY2        1    1[COMMON] unsigned char 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  DISPLAY0        1    4[COMMON] unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         2       0       0       0       0
  1689 ;;      Locals:         1       0       0       0       0
  1690 ;;      Temps:          2       0       0       0       0
  1691 ;;      Totals:         5       0       0       0       0
  1692 ;;Total ram usage:        5 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_isr
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701  01BB                     _mostrar_valor:	
  1702                           ;psect for function _mostrar_valor
  1703                           
  1704                           
  1705                           ;incstack = 0
  1706                           ; Regs used in _mostrar_valor: [wreg-fsr0h+status,2+status,0]
  1707                           ;mostrar_valor@DISPLAY0 stored from wreg
  1708  01BB  00F4               	movwf	mostrar_valor@DISPLAY0
  1709  01BC                     i1l1188:
  1710                           
  1711                           ;main_lab7.c: 162:     PORTDbits.RD0 = 0;
  1712  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1713  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1714  01BE  1008               	bcf	8,0	;volatile
  1715                           
  1716                           ;main_lab7.c: 163:     PORTDbits.RD1 = 0;
  1717  01BF  1088               	bcf	8,1	;volatile
  1718                           
  1719                           ;main_lab7.c: 164:     PORTDbits.RD2 = 0;
  1720  01C0  1108               	bcf	8,2	;volatile
  1721                           
  1722                           ;main_lab7.c: 165:     switch (banderas)
  1723  01C1  29D9               	goto	i1l1222
  1724  01C2                     i1l1190:
  1725                           
  1726                           ;main_lab7.c: 168:             PORTC = DISPLAY0;
  1727  01C2  0874               	movf	mostrar_valor@DISPLAY0,w
  1728  01C3  0087               	movwf	7	;volatile
  1729  01C4                     i1l1192:
  1730                           
  1731                           ;main_lab7.c: 169:             PORTDbits.RD0 = 1;
  1732  01C4  1408               	bsf	8,0	;volatile
  1733  01C5                     i1l1194:
  1734                           
  1735                           ;main_lab7.c: 170:             banderas = 1;
  1736  01C5  01FA               	clrf	_banderas
  1737  01C6  0AFA               	incf	_banderas,f
  1738  01C7  29EC               	goto	i1l85
  1739  01C8                     i1l1198:
  1740                           
  1741                           ;main_lab7.c: 174:             PORTC = DISPLAY1;
  1742  01C8  0870               	movf	mostrar_valor@DISPLAY1,w
  1743  01C9  0087               	movwf	7	;volatile
  1744  01CA                     i1l1200:
  1745                           
  1746                           ;main_lab7.c: 175:             PORTDbits.RD1 = 1;
  1747  01CA  1488               	bsf	8,1	;volatile
  1748                           
  1749                           ;main_lab7.c: 176:             banderas = 2;
  1750  01CB  3002               	movlw	2
  1751  01CC  00F2               	movwf	??_mostrar_valor
  1752  01CD  0872               	movf	??_mostrar_valor,w
  1753  01CE  00FA               	movwf	_banderas
  1754  01CF  29EC               	goto	i1l85
  1755  01D0                     i1l1204:
  1756                           
  1757                           ;main_lab7.c: 179:             PORTC = DISPLAY2;
  1758  01D0  0871               	movf	mostrar_valor@DISPLAY2,w
  1759  01D1  0087               	movwf	7	;volatile
  1760  01D2                     i1l1206:
  1761                           
  1762                           ;main_lab7.c: 180:             PORTDbits.RD2 = 1;
  1763  01D2  1508               	bsf	8,2	;volatile
  1764  01D3                     i1l1208:
  1765                           
  1766                           ;main_lab7.c: 181:             banderas = 0;
  1767  01D3  01FA               	clrf	_banderas
  1768  01D4  29EC               	goto	i1l85
  1769  01D5                     i1l1212:
  1770                           
  1771                           ;main_lab7.c: 184:             PORTC = 0b10000000;
  1772  01D5  3080               	movlw	128
  1773  01D6  0087               	movwf	7	;volatile
  1774  01D7                     i1l1214:
  1775                           
  1776                           ;main_lab7.c: 185:             PORTDbits.RD0 = 1;
  1777  01D7  1408               	bsf	8,0	;volatile
  1778  01D8  29D3               	goto	i1l1208
  1779  01D9                     i1l1222:
  1780  01D9  087A               	movf	_banderas,w
  1781  01DA  00F2               	movwf	??_mostrar_valor
  1782  01DB  01F3               	clrf	??_mostrar_valor+1
  1783                           
  1784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1785                           ; Switch size 1, requested type "simple"
  1786                           ; Number of cases is 1, Range of values is 0 to 0
  1787                           ; switch strategies available:
  1788                           ; Name         Instructions Cycles
  1789                           ; simple_byte            4     3 (average)
  1790                           ; direct_byte           11     8 (fixed)
  1791                           ; jumptable            260     6 (fixed)
  1792                           ;	Chosen strategy is simple_byte
  1793  01DC  0873               	movf	??_mostrar_valor+1,w
  1794  01DD  3A00               	xorlw	0	; case 0
  1795  01DE  1903               	skipnz
  1796  01DF  29E1               	goto	i1l1352
  1797  01E0  29D5               	goto	i1l1212
  1798  01E1                     i1l1352:
  1799                           
  1800                           ; Switch size 1, requested type "simple"
  1801                           ; Number of cases is 3, Range of values is 0 to 2
  1802                           ; switch strategies available:
  1803                           ; Name         Instructions Cycles
  1804                           ; simple_byte           10     6 (average)
  1805                           ; direct_byte           17     8 (fixed)
  1806                           ; jumptable            260     6 (fixed)
  1807                           ;	Chosen strategy is simple_byte
  1808  01E1  0872               	movf	??_mostrar_valor,w
  1809  01E2  3A00               	xorlw	0	; case 0
  1810  01E3  1903               	skipnz
  1811  01E4  29C2               	goto	i1l1190
  1812  01E5  3A01               	xorlw	1	; case 1
  1813  01E6  1903               	skipnz
  1814  01E7  29C8               	goto	i1l1198
  1815  01E8  3A03               	xorlw	3	; case 2
  1816  01E9  1903               	skipnz
  1817  01EA  29D0               	goto	i1l1204
  1818  01EB  29D5               	goto	i1l1212
  1819  01EC                     i1l85:
  1820  01EC  0008               	return
  1821  01ED                     __end_of_mostrar_valor:
  1822                           
  1823                           	psect	text10
  1824  0271                     __ptext10:	
  1825 ;; *************** function _RESET_TMR0 *****************
  1826 ;; Defined at:
  1827 ;;		line 101 in file "main_lab7.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  TMR_VAR         1    wreg     unsigned char 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  TMR_VAR         1    0[COMMON] unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         0       0       0       0       0
  1842 ;;      Locals:         1       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0
  1844 ;;      Totals:         1       0       0       0       0
  1845 ;;Total ram usage:        1 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_isr
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854  0271                     _RESET_TMR0:	
  1855                           ;psect for function _RESET_TMR0
  1856                           
  1857                           
  1858                           ;incstack = 0
  1859                           ; Regs used in _RESET_TMR0: [wreg]
  1860                           ;RESET_TMR0@TMR_VAR stored from wreg
  1861  0271  00F0               	movwf	RESET_TMR0@TMR_VAR
  1862  0272                     i1l1182:
  1863                           
  1864                           ;main_lab7.c: 102:     TMR0 = TMR_VAR;
  1865  0272  0870               	movf	RESET_TMR0@TMR_VAR,w
  1866  0273  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0274  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0275  0081               	movwf	1	;volatile
  1869  0276                     i1l1184:
  1870                           
  1871                           ;main_lab7.c: 103:     INTCONbits.T0IF = 0;
  1872  0276  110B               	bcf	11,2	;volatile
  1873  0277                     i1l52:
  1874  0277  0008               	return
  1875  0278                     __end_of_RESET_TMR0:
  1876  007E                     btemp	set	126	;btemp
  1877  007E                     wtemp0	set	126
  1878                           
  1879                           	psect	idloc
  1880                           
  1881                           ;Config register IDLOC0 @ 0x2000
  1882                           ;	unspecified, using default values
  1883  2000                     	org	8192
  1884  2000  3FFF               	dw	16383
  1885                           
  1886                           ;Config register IDLOC1 @ 0x2001
  1887                           ;	unspecified, using default values
  1888  2001                     	org	8193
  1889  2001  3FFF               	dw	16383
  1890                           
  1891                           ;Config register IDLOC2 @ 0x2002
  1892                           ;	unspecified, using default values
  1893  2002                     	org	8194
  1894  2002  3FFF               	dw	16383
  1895                           
  1896                           ;Config register IDLOC3 @ 0x2003
  1897                           ;	unspecified, using default values
  1898  2003                     	org	8195
  1899  2003  3FFF               	dw	16383
  1900                           
  1901                           	psect	config
  1902                           
  1903                           ;Config register CONFIG1 @ 0x2007
  1904                           ;	Oscillator Selection bits
  1905                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1906                           ;	Watchdog Timer Enable bit
  1907                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1908                           ;	Power-up Timer Enable bit
  1909                           ;	PWRTE = OFF, PWRT disabled
  1910                           ;	RE3/MCLR pin function select bit
  1911                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1912                           ;	Code Protection bit
  1913                           ;	CP = OFF, Program memory code protection is disabled
  1914                           ;	Data Code Protection bit
  1915                           ;	CPD = OFF, Data memory code protection is disabled
  1916                           ;	Brown Out Reset Selection bits
  1917                           ;	BOREN = OFF, BOR disabled
  1918                           ;	Internal External Switchover bit
  1919                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1920                           ;	Fail-Safe Clock Monitor Enabled bit
  1921                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1922                           ;	Low Voltage Programming Enable bit
  1923                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1924                           ;	In-Circuit Debugger Mode bit
  1925                           ;	DEBUG = 0x1, unprogrammed default
  1926  2007                     	org	8199
  1927  2007  20D4               	dw	8404
  1928                           
  1929                           ;Config register CONFIG2 @ 0x2008
  1930                           ;	Brown-out Reset Selection bit
  1931                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1932                           ;	Flash Program Memory Self Write Enable bits
  1933                           ;	WRT = OFF, Write protection off
  1934  2008                     	org	8200
  1935  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     22      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_mostrar_valor

Critical Paths under _main in BANK0

    _main->_obtener_valor
    _set_display->_TABLA
    _obtener_valor->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1421
                                             20 BANK0      2     2      0
                      _obtener_valor
                        _set_display
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_display                                          4     2      2     263
                                              4 BANK0      4     2      2
                              _TABLA
 ---------------------------------------------------------------------------------
 (2) _TABLA                                                4     4      0      45
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _obtener_valor                                        5     5      0    1158
                                             15 BANK0      5     5      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     240
                                              5 COMMON     5     5      0
                         _RESET_TMR0
                      _mostrar_valor
 ---------------------------------------------------------------------------------
 (4) _mostrar_valor                                        5     3      2     218
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _RESET_TMR0                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _obtener_valor
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _set_display
     _TABLA
   _setup

 _isr (ROOT)
   _RESET_TMR0
   _mostrar_valor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      28       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      28      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Apr 03 18:51:49 2022

         ___bmul@product 0022                       l60 00EC                       l46 023E  
                     l55 014C                       l80 0238             ___awdiv@sign 002C  
    ___wmul@multiplicand 0022                      l210 0213                      l122 01BA  
                    l208 01FB                      l234 0270                      l361 0087  
                    u210 01F5                      u211 01F4                      u310 0054  
                    u311 0053                      u240 020F                      u305 0046  
                    u241 020E                      u225 01FC                      u330 0065  
                    u250 0262                      u331 0064                      u251 0261  
                    u235 0203                      u260 026F                      u325 0055  
                    u261 026E                      u350 0079                      u270 0026  
                    u351 0078                      u335 0061                      u271 0025  
                    u360 007E                      u280 0031                      u361 007D  
                    u345 006D                      u281 0030                      u290 0042  
                    u291 0041                      _isr 014D                      fsr0 0004  
        ??_mostrar_valor 0072                     l1110 01ED                     l1120 020F  
                   l1112 01F1                     l1104 00B2                     l1032 008B  
                   l1130 0266                     l1114 01F5                     l1050 0098  
                   l1042 0094                     l1034 0090                     l1140 0022  
                   l1132 0268                     l1124 025D                     l1116 0202  
                   l1150 0036                     l1142 0026                     l1134 026F  
                   l1126 025E                     l1118 0209                     l1070 00A2  
                   l1062 009E                     l1054 009A                     l1046 0096  
                   l1038 0092                     l1230 0187                     l1160 004C  
                   l1152 003A                     l1144 002B                     l1128 0262  
                   l1240 0196                     l1232 018B                     l1170 006C  
                   l1162 0050                     l1154 003C                     l1146 002D  
                   l1138 001F                     l1090 00AC                     l1082 00A8  
                   l1074 00A4                     l1066 00A0                     l1058 009C  
                   l1250 01A6                     l1242 0199                     l1234 0191  
                   l1172 0073                     l1164 0054                     l1156 0042  
                   l1148 0031                     l1260 01AD                     l1252 01A7  
                   l1244 019C                     l1236 0192                     l1166 0065  
                   l1158 0045                     l1174 0079                     l1350 00BA  
                   l1094 00AE                     l1086 00AA                     l1078 00A6  
                   l1270 01B8                     l1262 01B1                     l1254 01A9  
                   l1246 019F                     l1238 0193                     l1176 007E  
                   l1168 006B                     l1272 01B9                     l1264 01B2  
                   l1256 01AA                     l1248 01A2                     l1178 0083  
                   l1274 00F0                     l1098 00B0                     l1266 01B3  
                   l1258 01AB                     l1276 0217                     l1268 01B7  
                   l1296 0239                     l1298 0246                     ?_isr 0070  
                   _IOCB 0096                     i1l41 017E                     i1l35 0164  
                   i1l52 0277                     i1l36 015C                     i1l85 01EC  
                   _TMR0 0001                     _WPUB 0095                     _main 0239  
                   btemp 007E                     start 000E        ___bmul@multiplier 0023  
            ?_RESET_TMR0 0070                    ??_isr 0075                    ?_main 0070  
        __end_of___awdiv 0088                    _ANSEL 0188          ___awdiv@divisor 0026  
                  _TABLA 0088          ___awdiv@counter 002B                    u40_20 0168  
                  u40_21 0167                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    u37_20 0151                    u37_21 0150  
                  u38_20 0157                    u38_21 0156                    u39_20 0160  
                  u39_21 015F                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _setup 0187  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 025A                   ??_main 0034  
                 ?_TABLA 0070                   TABLA@i 0023         ___awdiv@dividend 0028  
                 ?_setup 0070                   _ANSELH 0189                   i1l1200 01CA  
                 i1l1212 01D5                   i1l1204 01D0                   i1l1214 01D7  
                 i1l1206 01D2                   i1l1222 01D9                   i1l1208 01D3  
                 i1l1182 0272                   i1l1190 01C2                   i1l1184 0276  
                 i1l1352 01E1                   i1l1192 01C4                   i1l1280 014D  
                 i1l1194 01C5                   i1l1290 0168                   i1l1282 0151  
                 i1l1188 01BC                   i1l1292 016E                   i1l1284 0157  
                 i1l1198 01C8                   i1l1286 0160                   i1l1288 0162  
           ?_set_display 0024                   ___bmul 025A                   ___wmul 01ED  
              ??___awdiv 002A                   _conteo 007B         ___awdiv@quotient 002D  
                 saved_w 007E        RESET_TMR0@TMR_VAR 0070  __end_of__initialization 001B  
          __end_of_TABLA 00ED      ___bmul@multiplicand 0020           __pcstackCOMMON 0070  
          __end_of_setup 01BB                  ??_TABLA 0020           _OPTION_REGbits 0081  
                ??_setup 0020               __pbssBANK0 0036      set_display@VALORES0 0027  
    set_display@VALORES1 0024      set_display@VALORES2 0025             ??_RESET_TMR0 0070  
             __pmaintext 0239                  ?___bmul 0020                  ?___wmul 0020  
             __pintentry 0004       __end_of_RESET_TMR0 0278    __end_of_mostrar_valor 01ED  
                ___awdiv 001F    mostrar_valor@DISPLAY0 0074    mostrar_valor@DISPLAY1 0070  
  mostrar_valor@DISPLAY2 0071                  __ptext1 0187                  __ptext2 0214  
                __ptext3 0088                  __ptext4 00ED                  __ptext5 01ED  
                __ptext6 025A                  __ptext7 001F                  __ptext8 014D  
                __ptext9 01BB                  _display 0036            _obtener_valor 00ED  
                _valores 0039     end_of_initialization 001B                _PORTBbits 0006  
              _PORTDbits 0008           ?_obtener_valor 0070           __end_of___bmul 0271  
         __end_of___wmul 0214               TABLA@VALOR 0022      start_initialization 0011  
            __end_of_isr 0187                 ??___bmul 0021                 ??___wmul 0024  
        ??_obtener_valor 002F              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0026        interrupt_function 0004  
         ___wmul@product 0024            ??_set_display 0026        ___wmul@multiplier 0020  
    __end_of_set_display 0239                 _banderas 007A                 __ptext10 0271  
     obtener_valor@VALOR 0033            _mostrar_valor 01BB               _INTCONbits 000B  
         ?_mostrar_valor 0070                 intlevel1 0000              _set_display 0214  
             _OSCCONbits 008F               _RESET_TMR0 0271    __end_of_obtener_valor 014D  
