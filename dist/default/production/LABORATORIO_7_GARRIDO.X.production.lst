

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Apr 06 16:33:39 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296                           
   297                           	psect	idataBANK0
   298  0220                     __pidataBANK0:
   299                           
   300                           ;initializer for _TABLA
   301  0220  343F               	retlw	63
   302  0221  3406               	retlw	6
   303  0222  345B               	retlw	91
   304  0223  344F               	retlw	79
   305  0224  3466               	retlw	102
   306  0225  346D               	retlw	109
   307  0226  347D               	retlw	125
   308  0227  3407               	retlw	7
   309  0228  347F               	retlw	127
   310  0229  346F               	retlw	111
   311  022A  3477               	retlw	119
   312  022B  347C               	retlw	124
   313  022C  3439               	retlw	57
   314  022D  345E               	retlw	94
   315  022E  3479               	retlw	121
   316  022F  3471               	retlw	113
   317  0008                     _PORTD	set	8
   318  0007                     _PORTC	set	7
   319  0008                     _PORTDbits	set	8
   320  0001                     _TMR0	set	1
   321  0005                     _PORTA	set	5
   322  0006                     _PORTBbits	set	6
   323  000B                     _INTCONbits	set	11
   324  0096                     _IOCB	set	150
   325  0095                     _WPUB	set	149
   326  0081                     _OPTION_REGbits	set	129
   327  0086                     _TRISB	set	134
   328  0088                     _TRISD	set	136
   329  0087                     _TRISC	set	135
   330  0085                     _TRISA	set	133
   331  008F                     _OSCCONbits	set	143
   332  0189                     _ANSELH	set	393
   333  0188                     _ANSEL	set	392
   334                           
   335                           	psect	cinit
   336  0011                     start_initialization:	
   337                           ; #config settings
   338                           
   339  0011                     __initialization:
   340                           
   341                           ; Initialize objects allocated to BANK0
   342  0011  1383               	bcf	3,7	;select IRP bank0
   343  0012  3046               	movlw	low (__pdataBANK0+16)
   344  0013  00FD               	movwf	btemp+-1
   345  0014  3002               	movlw	high __pidataBANK0
   346  0015  00FE               	movwf	btemp
   347  0016  3020               	movlw	low __pidataBANK0
   348  0017  00FF               	movwf	btemp+1
   349  0018  3036               	movlw	low __pdataBANK0
   350  0019  0084               	movwf	4
   351  001A  120A  118A  2211  120A  118A  	fcall	init_ram0
   352                           
   353                           ; Clear objects allocated to BANK0
   354  001F  01C6               	clrf	__pbssBANK0& (0+127)
   355  0020  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   356  0021  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   357  0022  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   358  0023  01CA               	clrf	(__pbssBANK0+4)& (0+127)
   359  0024  01CB               	clrf	(__pbssBANK0+5)& (0+127)
   360                           
   361                           ; Clear objects allocated to COMMON
   362  0025  01FA               	clrf	__pbssCOMMON& (0+127)
   363  0026  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   364  0027                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367  0027                     __end_of__initialization:
   368  0027  0183               	clrf	3
   369  0028  120A  118A  29BB   	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssCOMMON
   372  007A                     __pbssCOMMON:
   373  007A                     _banderas:
   374  007A                     	ds	1
   375  007B                     _conteo:
   376  007B                     	ds	1
   377                           
   378                           	psect	bssBANK0
   379  0046                     __pbssBANK0:
   380  0046                     _display:
   381  0046                     	ds	3
   382  0049                     _valores:
   383  0049                     	ds	3
   384                           
   385                           	psect	dataBANK0
   386  0036                     __pdataBANK0:
   387  0036                     _TABLA:
   388  0036                     	ds	16
   389                           
   390                           	psect	inittext
   391  020D                     init_fetch0:	
   392                           ;	Called with low address in FSR and high address in W
   393                           
   394  020D  087E               	movf	btemp,w
   395  020E  008A               	movwf	10
   396  020F  087F               	movf	btemp+1,w
   397  0210  0082               	movwf	2
   398  0211                     init_ram0:	
   399                           ;Called with:
   400                           ;	high address of idata address in btemp 
   401                           ;	low address of idata address in btemp+1 
   402                           ;	low address of data in FSR
   403                           ;	high address + 1 of data in btemp-1
   404                           
   405  0211  120A  118A  220D  120A  118A  	fcall	init_fetch0
   406  0216  0080               	movwf	0
   407  0217  0A84               	incf	4,f
   408  0218  0804               	movf	4,w
   409  0219  067D               	xorwf	btemp+-1,w
   410  021A  1903               	btfsc	3,2
   411  021B  3400               	retlw	0
   412  021C  0AFF               	incf	btemp+1,f
   413  021D  1903               	btfsc	3,2
   414  021E  0AFE               	incf	btemp,f
   415  021F  2A11               	goto	init_ram0
   416                           
   417                           	psect	cstackCOMMON
   418  0070                     __pcstackCOMMON:
   419  0070                     ?_RESET_TMR0:
   420  0070                     ??_RESET_TMR0:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_mostrar_valor:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_setup:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_obtener_valor:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_isr:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     RESET_TMR0@TMR_VAR:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     mostrar_valor@DISPLAY1:	
   442                           ; 1 bytes @ 0x0
   443                           
   444                           
   445                           ; 1 bytes @ 0x0
   446  0070                     	ds	1
   447  0071                     mostrar_valor@DISPLAY2:
   448                           
   449                           ; 1 bytes @ 0x1
   450  0071                     	ds	1
   451  0072                     ??_mostrar_valor:
   452                           
   453                           ; 1 bytes @ 0x2
   454  0072                     	ds	2
   455  0074                     mostrar_valor@DISPLAY0:
   456                           
   457                           ; 1 bytes @ 0x4
   458  0074                     	ds	1
   459  0075                     ??_isr:
   460                           
   461                           ; 1 bytes @ 0x5
   462  0075                     	ds	5
   463                           
   464                           	psect	cstackBANK0
   465  0020                     __pcstackBANK0:
   466  0020                     ??_setup:
   467  0020                     ?_set_display:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0020                     ?___bmul:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0020                     ?___wmul:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0020                     set_display@VALORES1:	
   477                           ; 2 bytes @ 0x0
   478                           
   479  0020                     ___bmul@multiplicand:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0020                     ___wmul@multiplier:	
   483                           ; 1 bytes @ 0x0
   484                           
   485                           
   486                           ; 2 bytes @ 0x0
   487  0020                     	ds	1
   488  0021                     ??___bmul:
   489  0021                     set_display@VALORES2:	
   490                           ; 1 bytes @ 0x1
   491                           
   492                           
   493                           ; 1 bytes @ 0x1
   494  0021                     	ds	1
   495  0022                     ??_set_display:
   496  0022                     ___bmul@product:	
   497                           ; 1 bytes @ 0x2
   498                           
   499  0022                     ___wmul@multiplicand:	
   500                           ; 1 bytes @ 0x2
   501                           
   502                           
   503                           ; 2 bytes @ 0x2
   504  0022                     	ds	1
   505  0023                     set_display@VALORES0:
   506  0023                     ___bmul@multiplier:	
   507                           ; 1 bytes @ 0x3
   508                           
   509                           
   510                           ; 1 bytes @ 0x3
   511  0023                     	ds	1
   512  0024                     ??___wmul:
   513  0024                     ___wmul@product:	
   514                           ; 1 bytes @ 0x4
   515                           
   516                           
   517                           ; 2 bytes @ 0x4
   518  0024                     	ds	2
   519  0026                     ?___awdiv:
   520  0026                     ___awdiv@divisor:	
   521                           ; 2 bytes @ 0x6
   522                           
   523                           
   524                           ; 2 bytes @ 0x6
   525  0026                     	ds	2
   526  0028                     ___awdiv@dividend:
   527                           
   528                           ; 2 bytes @ 0x8
   529  0028                     	ds	2
   530  002A                     ??___awdiv:
   531                           
   532                           ; 1 bytes @ 0xA
   533  002A                     	ds	1
   534  002B                     ___awdiv@counter:
   535                           
   536                           ; 1 bytes @ 0xB
   537  002B                     	ds	1
   538  002C                     ___awdiv@sign:
   539                           
   540                           ; 1 bytes @ 0xC
   541  002C                     	ds	1
   542  002D                     ___awdiv@quotient:
   543                           
   544                           ; 2 bytes @ 0xD
   545  002D                     	ds	2
   546  002F                     ??_obtener_valor:
   547                           
   548                           ; 1 bytes @ 0xF
   549  002F                     	ds	4
   550  0033                     obtener_valor@VALOR:
   551                           
   552                           ; 1 bytes @ 0x13
   553  0033                     	ds	1
   554  0034                     ??_main:
   555                           
   556                           ; 1 bytes @ 0x14
   557  0034                     	ds	2
   558                           
   559                           	psect	maintext
   560  01BB                     __pmaintext:	
   561 ;;
   562 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   563 ;;
   564 ;; *************** function _main *****************
   565 ;; Defined at:
   566 ;;		line 88 in file "main_lab7.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : B00/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0
   582 ;;      Temps:          0       2       0       0       0
   583 ;;      Totals:         0       2       0       0       0
   584 ;;Total ram usage:        2 bytes
   585 ;; Hardware stack levels required when called: 4
   586 ;; This function calls:
   587 ;;		_obtener_valor
   588 ;;		_set_display
   589 ;;		_setup
   590 ;; This function is called by:
   591 ;;		Startup code after reset
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595  01BB                     _main:	
   596                           ;psect for function _main
   597                           
   598  01BB                     l1285:	
   599                           ;incstack = 0
   600                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   601                           
   602                           
   603                           ;main_lab7.c: 89:     setup();
   604  01BB  120A  118A  212E  120A  118A  	fcall	_setup
   605  01C0                     l48:	
   606                           ;main_lab7.c: 90:     while(1){
   607                           
   608                           
   609                           ;main_lab7.c: 91:         obtener_valor(PORTA);
   610  01C0  1283               	bcf	3,5	;RP0=0, select bank0
   611  01C1  1303               	bcf	3,6	;RP1=0, select bank0
   612  01C2  0805               	movf	5,w	;volatile
   613  01C3  120A  118A  2094  120A  118A  	fcall	_obtener_valor
   614  01C8                     l1287:
   615                           
   616                           ;main_lab7.c: 92:         set_display(valores[0],valores[1],valores[2]);
   617  01C8  1283               	bcf	3,5	;RP0=0, select bank0
   618  01C9  1303               	bcf	3,6	;RP1=0, select bank0
   619  01CA  084A               	movf	_valores+1,w
   620  01CB  00B4               	movwf	??_main
   621  01CC  0834               	movf	??_main,w
   622  01CD  00A0               	movwf	set_display@VALORES1
   623  01CE  084B               	movf	_valores+2,w
   624  01CF  00B5               	movwf	??_main+1
   625  01D0  0835               	movf	??_main+1,w
   626  01D1  00A1               	movwf	set_display@VALORES2
   627  01D2  0849               	movf	_valores,w
   628  01D3  120A  118A  21DC  120A  118A  	fcall	_set_display
   629  01D8  29C0               	goto	l48
   630  01D9  120A  118A  280E   	ljmp	start
   631  01DC                     __end_of_main:
   632                           
   633                           	psect	text1
   634  012E                     __ptext1:	
   635 ;; *************** function _setup *****************
   636 ;; Defined at:
   637 ;;		line 10 in file "setup_lab7.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         0       0       0       0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 2
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665  012E                     _setup:	
   666                           ;psect for function _setup
   667                           
   668  012E                     l1141:	
   669                           ;incstack = 0
   670                           ; Regs used in _setup: [wreg+status,2+status,0]
   671                           
   672                           
   673                           ;setup_lab7.c: 11:     ANSEL = 0;
   674  012E  1683               	bsf	3,5	;RP0=1, select bank3
   675  012F  1703               	bsf	3,6	;RP1=1, select bank3
   676  0130  0188               	clrf	8	;volatile
   677                           
   678                           ;setup_lab7.c: 12:     ANSELH = 0;
   679  0131  0189               	clrf	9	;volatile
   680  0132                     l1143:
   681                           
   682                           ;setup_lab7.c: 14:     OSCCONbits.IRCF = 0b100;
   683  0132  1683               	bsf	3,5	;RP0=1, select bank1
   684  0133  1303               	bcf	3,6	;RP1=0, select bank1
   685  0134  080F               	movf	15,w	;volatile
   686  0135  398F               	andlw	-113
   687  0136  3840               	iorlw	64
   688  0137  008F               	movwf	15	;volatile
   689  0138                     l1145:
   690                           
   691                           ;setup_lab7.c: 15:     OSCCONbits.SCS = 1;
   692  0138  140F               	bsf	15,0	;volatile
   693  0139                     l1147:
   694                           
   695                           ;setup_lab7.c: 17:     TRISA = 0;
   696  0139  0185               	clrf	5	;volatile
   697  013A                     l1149:
   698                           
   699                           ;setup_lab7.c: 18:     PORTA = 0;
   700  013A  1283               	bcf	3,5	;RP0=0, select bank0
   701  013B  1303               	bcf	3,6	;RP1=0, select bank0
   702  013C  0185               	clrf	5	;volatile
   703  013D                     l1151:
   704                           
   705                           ;setup_lab7.c: 19:     TRISC = 0;
   706  013D  1683               	bsf	3,5	;RP0=1, select bank1
   707  013E  1303               	bcf	3,6	;RP1=0, select bank1
   708  013F  0187               	clrf	7	;volatile
   709  0140                     l1153:
   710                           
   711                           ;setup_lab7.c: 20:     PORTC = 0;
   712  0140  1283               	bcf	3,5	;RP0=0, select bank0
   713  0141  1303               	bcf	3,6	;RP1=0, select bank0
   714  0142  0187               	clrf	7	;volatile
   715  0143                     l1155:
   716                           
   717                           ;setup_lab7.c: 21:     TRISD = 0;
   718  0143  1683               	bsf	3,5	;RP0=1, select bank1
   719  0144  1303               	bcf	3,6	;RP1=0, select bank1
   720  0145  0188               	clrf	8	;volatile
   721  0146                     l1157:
   722                           
   723                           ;setup_lab7.c: 22:     PORTD = 0;
   724  0146  1283               	bcf	3,5	;RP0=0, select bank0
   725  0147  1303               	bcf	3,6	;RP1=0, select bank0
   726  0148  0188               	clrf	8	;volatile
   727  0149                     l1159:
   728                           
   729                           ;setup_lab7.c: 23:     TRISB = 0xFF;
   730  0149  30FF               	movlw	255
   731  014A  1683               	bsf	3,5	;RP0=1, select bank1
   732  014B  1303               	bcf	3,6	;RP1=0, select bank1
   733  014C  0086               	movwf	6	;volatile
   734  014D                     l1161:
   735                           
   736                           ;setup_lab7.c: 25:     OPTION_REGbits.nRBPU = 0;
   737  014D  1381               	bcf	1,7	;volatile
   738  014E                     l1163:
   739                           
   740                           ;setup_lab7.c: 26:     WPUB = 0x03;
   741  014E  3003               	movlw	3
   742  014F  0095               	movwf	21	;volatile
   743  0150                     l1165:
   744                           
   745                           ;setup_lab7.c: 28:     OPTION_REGbits.T0CS = 0;
   746  0150  1281               	bcf	1,5	;volatile
   747  0151                     l1167:
   748                           
   749                           ;setup_lab7.c: 29:     OPTION_REGbits.PSA = 0;
   750  0151  1181               	bcf	1,3	;volatile
   751  0152                     l1169:
   752                           
   753                           ;setup_lab7.c: 30:     OPTION_REGbits.PS = 0b111;
   754  0152  3007               	movlw	7
   755  0153  0481               	iorwf	1,f	;volatile
   756  0154                     l1171:
   757                           
   758                           ;setup_lab7.c: 31:     TMR0 = 254;
   759  0154  30FE               	movlw	254
   760  0155  1283               	bcf	3,5	;RP0=0, select bank0
   761  0156  1303               	bcf	3,6	;RP1=0, select bank0
   762  0157  0081               	movwf	1	;volatile
   763  0158                     l1173:
   764                           
   765                           ;setup_lab7.c: 33:     INTCONbits.GIE = 1;
   766  0158  178B               	bsf	11,7	;volatile
   767  0159                     l1175:
   768                           
   769                           ;setup_lab7.c: 34:     INTCONbits.RBIE = 1;
   770  0159  158B               	bsf	11,3	;volatile
   771  015A                     l1177:
   772                           
   773                           ;setup_lab7.c: 35:     IOCB = 0x03;
   774  015A  3003               	movlw	3
   775  015B  1683               	bsf	3,5	;RP0=1, select bank1
   776  015C  1303               	bcf	3,6	;RP1=0, select bank1
   777  015D  0096               	movwf	22	;volatile
   778  015E                     l1179:
   779                           
   780                           ;setup_lab7.c: 36:     INTCONbits.RBIF = 0;
   781  015E  100B               	bcf	11,0	;volatile
   782  015F                     l1181:
   783                           
   784                           ;setup_lab7.c: 37:     INTCONbits.T0IE = 1;
   785  015F  168B               	bsf	11,5	;volatile
   786  0160                     l1183:
   787                           
   788                           ;setup_lab7.c: 38:     INTCONbits.T0IF = 0;
   789  0160  110B               	bcf	11,2	;volatile
   790  0161                     l127:
   791  0161  0008               	return
   792  0162                     __end_of_setup:
   793                           
   794                           	psect	text2
   795  01DC                     __ptext2:	
   796 ;; *************** function _set_display *****************
   797 ;; Defined at:
   798 ;;		line 165 in file "main_lab7.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  VALORES0        1    wreg     unsigned char 
   801 ;;  VALORES1        1    0[BANK0 ] unsigned char 
   802 ;;  VALORES2        1    1[BANK0 ] unsigned char 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  VALORES0        1    3[BANK0 ] unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   814 ;;      Params:         0       2       0       0       0
   815 ;;      Locals:         0       1       0       0       0
   816 ;;      Temps:          0       1       0       0       0
   817 ;;      Totals:         0       4       0       0       0
   818 ;;Total ram usage:        4 bytes
   819 ;; Hardware stack levels used: 1
   820 ;; Hardware stack levels required when called: 2
   821 ;; This function calls:
   822 ;;		Nothing
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828  01DC                     _set_display:	
   829                           ;psect for function _set_display
   830                           
   831                           
   832                           ;incstack = 0
   833                           ; Regs used in _set_display: [wreg-fsr0h+status,2+status,0]
   834                           ;set_display@VALORES0 stored from wreg
   835  01DC  1283               	bcf	3,5	;RP0=0, select bank0
   836  01DD  1303               	bcf	3,6	;RP1=0, select bank0
   837  01DE  00A3               	movwf	set_display@VALORES0
   838  01DF                     l1187:
   839                           
   840                           ;main_lab7.c: 166:     display[0] = TABLA[VALORES2];
   841  01DF  0821               	movf	set_display@VALORES2,w
   842  01E0  3E36               	addlw	(low (_TABLA| 0))& (0+255)
   843  01E1  0084               	movwf	4
   844  01E2  1383               	bcf	3,7	;select IRP bank0
   845  01E3  0800               	movf	0,w
   846  01E4  00A2               	movwf	??_set_display
   847  01E5  0822               	movf	??_set_display,w
   848  01E6  00C6               	movwf	_display
   849                           
   850                           ;main_lab7.c: 167:     display[1] = TABLA[VALORES1];
   851  01E7  0820               	movf	set_display@VALORES1,w
   852  01E8  3E36               	addlw	(low (_TABLA| 0))& (0+255)
   853  01E9  0084               	movwf	4
   854  01EA  0800               	movf	0,w
   855  01EB  00A2               	movwf	??_set_display
   856  01EC  0822               	movf	??_set_display,w
   857  01ED  00C7               	movwf	_display+1
   858                           
   859                           ;main_lab7.c: 168:     display[2] = TABLA[VALORES0];
   860  01EE  0823               	movf	set_display@VALORES0,w
   861  01EF  3E36               	addlw	(low (_TABLA| 0))& (0+255)
   862  01F0  0084               	movwf	4
   863  01F1  0800               	movf	0,w
   864  01F2  00A2               	movwf	??_set_display
   865  01F3  0822               	movf	??_set_display,w
   866  01F4  00C8               	movwf	_display+2
   867  01F5                     l85:
   868  01F5  0008               	return
   869  01F6                     __end_of_set_display:
   870                           
   871                           	psect	text3
   872  0094                     __ptext3:	
   873 ;; *************** function _obtener_valor *****************
   874 ;; Defined at:
   875 ;;		line 111 in file "main_lab7.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  VALOR           1    wreg     unsigned char 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  VALOR           1   19[BANK0 ] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, status,2, status,0, pclath, cstack
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       0       0       0       0
   890 ;;      Locals:         0       1       0       0       0
   891 ;;      Temps:          0       4       0       0       0
   892 ;;      Totals:         0       5       0       0       0
   893 ;;Total ram usage:        5 bytes
   894 ;; Hardware stack levels used: 1
   895 ;; Hardware stack levels required when called: 3
   896 ;; This function calls:
   897 ;;		___awdiv
   898 ;;		___bmul
   899 ;;		___wmul
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905  0094                     _obtener_valor:	
   906                           ;psect for function _obtener_valor
   907                           
   908                           
   909                           ;incstack = 0
   910                           ; Regs used in _obtener_valor: [wreg+status,2+status,0+pclath+cstack]
   911                           ;obtener_valor@VALOR stored from wreg
   912  0094  1283               	bcf	3,5	;RP0=0, select bank0
   913  0095  1303               	bcf	3,6	;RP1=0, select bank0
   914  0096  00B3               	movwf	obtener_valor@VALOR
   915  0097                     l1185:
   916                           
   917                           ;main_lab7.c: 112:     valores[2] = VALOR/100;
   918  0097  3064               	movlw	100
   919  0098  00A6               	movwf	___awdiv@divisor
   920  0099  3000               	movlw	0
   921  009A  00A7               	movwf	___awdiv@divisor+1
   922  009B  0833               	movf	obtener_valor@VALOR,w
   923  009C  00AF               	movwf	??_obtener_valor
   924  009D  01B0               	clrf	??_obtener_valor+1
   925  009E  082F               	movf	??_obtener_valor,w
   926  009F  00A8               	movwf	___awdiv@dividend
   927  00A0  0830               	movf	??_obtener_valor+1,w
   928  00A1  00A9               	movwf	___awdiv@dividend+1
   929  00A2  120A  118A  202B  120A  118A  	fcall	___awdiv
   930  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   931  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   932  00A9  0826               	movf	?___awdiv,w
   933  00AA  00B1               	movwf	??_obtener_valor+2
   934  00AB  0831               	movf	??_obtener_valor+2,w
   935  00AC  00CB               	movwf	_valores+2
   936                           
   937                           ;main_lab7.c: 113:     valores[1] = (VALOR-valores[2]*100)/10;
   938  00AD  300A               	movlw	10
   939  00AE  00A6               	movwf	___awdiv@divisor
   940  00AF  3000               	movlw	0
   941  00B0  00A7               	movwf	___awdiv@divisor+1
   942  00B1  084B               	movf	_valores+2,w
   943  00B2  00AF               	movwf	??_obtener_valor
   944  00B3  01B0               	clrf	??_obtener_valor+1
   945  00B4  082F               	movf	??_obtener_valor,w
   946  00B5  00A0               	movwf	___wmul@multiplier
   947  00B6  0830               	movf	??_obtener_valor+1,w
   948  00B7  00A1               	movwf	___wmul@multiplier+1
   949  00B8  309C               	movlw	156
   950  00B9  00A2               	movwf	___wmul@multiplicand
   951  00BA  30FF               	movlw	255
   952  00BB  00A3               	movwf	___wmul@multiplicand+1
   953  00BC  120A  118A  2194  120A  118A  	fcall	___wmul
   954  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   955  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   956  00C3  0833               	movf	obtener_valor@VALOR,w
   957  00C4  0720               	addwf	?___wmul,w
   958  00C5  00A8               	movwf	___awdiv@dividend
   959  00C6  0821               	movf	?___wmul+1,w
   960  00C7  1803               	skipnc
   961  00C8  0A21               	incf	?___wmul+1,w
   962  00C9  00A9               	movwf	___awdiv@dividend+1
   963  00CA  120A  118A  202B  120A  118A  	fcall	___awdiv
   964  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   965  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   966  00D1  0826               	movf	?___awdiv,w
   967  00D2  00B1               	movwf	??_obtener_valor+2
   968  00D3  0831               	movf	??_obtener_valor+2,w
   969  00D4  00CA               	movwf	_valores+1
   970                           
   971                           ;main_lab7.c: 114:     valores[0] = VALOR-valores[2]*100-valores[1]*10;
   972  00D5  309C               	movlw	156
   973  00D6  00AF               	movwf	??_obtener_valor
   974  00D7  082F               	movf	??_obtener_valor,w
   975  00D8  00A0               	movwf	___bmul@multiplicand
   976  00D9  084B               	movf	_valores+2,w
   977  00DA  120A  118A  21F6  120A  118A  	fcall	___bmul
   978  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   979  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   980  00E1  00B0               	movwf	??_obtener_valor+1
   981  00E2  30F6               	movlw	246
   982  00E3  00B1               	movwf	??_obtener_valor+2
   983  00E4  0831               	movf	??_obtener_valor+2,w
   984  00E5  00A0               	movwf	___bmul@multiplicand
   985  00E6  084A               	movf	_valores+1,w
   986  00E7  120A  118A  21F6  120A  118A  	fcall	___bmul
   987  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   988  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   989  00EE  0730               	addwf	??_obtener_valor+1,w
   990  00EF  0733               	addwf	obtener_valor@VALOR,w
   991  00F0  00B2               	movwf	??_obtener_valor+3
   992  00F1  0832               	movf	??_obtener_valor+3,w
   993  00F2  00C9               	movwf	_valores
   994  00F3                     l57:
   995  00F3  0008               	return
   996  00F4                     __end_of_obtener_valor:
   997                           
   998                           	psect	text4
   999  0194                     __ptext4:	
  1000 ;; *************** function ___wmul *****************
  1001 ;; Defined at:
  1002 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1005 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  product         2    4[BANK0 ] unsigned int 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  2    0[BANK0 ] unsigned int 
  1010 ;; Registers used:
  1011 ;;		wreg, status,2, status,0
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       4       0       0       0
  1018 ;;      Locals:         0       2       0       0       0
  1019 ;;      Temps:          0       0       0       0       0
  1020 ;;      Totals:         0       6       0       0       0
  1021 ;;Total ram usage:        6 bytes
  1022 ;; Hardware stack levels used: 1
  1023 ;; Hardware stack levels required when called: 2
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_obtener_valor
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031  0194                     ___wmul:	
  1032                           ;psect for function ___wmul
  1033                           
  1034  0194                     l1021:	
  1035                           ;incstack = 0
  1036                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1037                           
  1038  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0196  01A4               	clrf	___wmul@product
  1041  0197  01A5               	clrf	___wmul@product+1
  1042  0198                     l1023:
  1043  0198  1C20               	btfss	___wmul@multiplier,0
  1044  0199  299B               	goto	u211
  1045  019A  299C               	goto	u210
  1046  019B                     u211:
  1047  019B  29A2               	goto	l213
  1048  019C                     u210:
  1049  019C                     l1025:
  1050  019C  0822               	movf	___wmul@multiplicand,w
  1051  019D  07A4               	addwf	___wmul@product,f
  1052  019E  1803               	skipnc
  1053  019F  0AA5               	incf	___wmul@product+1,f
  1054  01A0  0823               	movf	___wmul@multiplicand+1,w
  1055  01A1  07A5               	addwf	___wmul@product+1,f
  1056  01A2                     l213:
  1057  01A2  3001               	movlw	1
  1058  01A3                     u225:
  1059  01A3  1003               	clrc
  1060  01A4  0DA2               	rlf	___wmul@multiplicand,f
  1061  01A5  0DA3               	rlf	___wmul@multiplicand+1,f
  1062  01A6  3EFF               	addlw	-1
  1063  01A7  1D03               	skipz
  1064  01A8  29A3               	goto	u225
  1065  01A9                     l1027:
  1066  01A9  3001               	movlw	1
  1067  01AA                     u235:
  1068  01AA  1003               	clrc
  1069  01AB  0CA1               	rrf	___wmul@multiplier+1,f
  1070  01AC  0CA0               	rrf	___wmul@multiplier,f
  1071  01AD  3EFF               	addlw	-1
  1072  01AE  1D03               	skipz
  1073  01AF  29AA               	goto	u235
  1074  01B0                     l1029:
  1075  01B0  0820               	movf	___wmul@multiplier,w
  1076  01B1  0421               	iorwf	___wmul@multiplier+1,w
  1077  01B2  1D03               	btfss	3,2
  1078  01B3  29B5               	goto	u241
  1079  01B4  29B6               	goto	u240
  1080  01B5                     u241:
  1081  01B5  2998               	goto	l1023
  1082  01B6                     u240:
  1083  01B6                     l1031:
  1084  01B6  0825               	movf	___wmul@product+1,w
  1085  01B7  00A1               	movwf	?___wmul+1
  1086  01B8  0824               	movf	___wmul@product,w
  1087  01B9  00A0               	movwf	?___wmul
  1088  01BA                     l215:
  1089  01BA  0008               	return
  1090  01BB                     __end_of___wmul:
  1091                           
  1092                           	psect	text5
  1093  01F6                     __ptext5:	
  1094 ;; *************** function ___bmul *****************
  1095 ;; Defined at:
  1096 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  multiplier      1    wreg     unsigned char 
  1099 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1102 ;;  product         1    2[BANK0 ] unsigned char 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      unsigned char 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       1       0       0       0
  1113 ;;      Locals:         0       2       0       0       0
  1114 ;;      Temps:          0       1       0       0       0
  1115 ;;      Totals:         0       4       0       0       0
  1116 ;;Total ram usage:        4 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 2
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_obtener_valor
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126  01F6                     ___bmul:	
  1127                           ;psect for function ___bmul
  1128                           
  1129                           
  1130                           ;incstack = 0
  1131                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1132                           ;___bmul@multiplier stored from wreg
  1133  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1134  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1135  01F8  00A3               	movwf	___bmul@multiplier
  1136  01F9                     l1035:
  1137  01F9  01A2               	clrf	___bmul@product
  1138  01FA                     l1037:
  1139  01FA  1C23               	btfss	___bmul@multiplier,0
  1140  01FB  29FD               	goto	u251
  1141  01FC  29FE               	goto	u250
  1142  01FD                     u251:
  1143  01FD  2A02               	goto	l1041
  1144  01FE                     u250:
  1145  01FE                     l1039:
  1146  01FE  0820               	movf	___bmul@multiplicand,w
  1147  01FF  00A1               	movwf	??___bmul
  1148  0200  0821               	movf	??___bmul,w
  1149  0201  07A2               	addwf	___bmul@product,f
  1150  0202                     l1041:
  1151  0202  1003               	clrc
  1152  0203  0DA0               	rlf	___bmul@multiplicand,f
  1153  0204                     l1043:
  1154  0204  1003               	clrc
  1155  0205  0CA3               	rrf	___bmul@multiplier,f
  1156  0206  0823               	movf	___bmul@multiplier,w
  1157  0207  1D03               	btfss	3,2
  1158  0208  2A0A               	goto	u261
  1159  0209  2A0B               	goto	u260
  1160  020A                     u261:
  1161  020A  29FA               	goto	l1037
  1162  020B                     u260:
  1163  020B                     l1045:
  1164  020B  0822               	movf	___bmul@product,w
  1165  020C                     l239:
  1166  020C  0008               	return
  1167  020D                     __end_of___bmul:
  1168                           
  1169                           	psect	text6
  1170  002B                     __ptext6:	
  1171 ;; *************** function ___awdiv *****************
  1172 ;; Defined at:
  1173 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  divisor         2    6[BANK0 ] int 
  1176 ;;  dividend        2    8[BANK0 ] int 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  quotient        2   13[BANK0 ] int 
  1179 ;;  sign            1   12[BANK0 ] unsigned char 
  1180 ;;  counter         1   11[BANK0 ] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  2    6[BANK0 ] int 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1190 ;;      Params:         0       4       0       0       0
  1191 ;;      Locals:         0       4       0       0       0
  1192 ;;      Temps:          0       1       0       0       0
  1193 ;;      Totals:         0       9       0       0       0
  1194 ;;Total ram usage:        9 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 2
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_obtener_valor
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204  002B                     ___awdiv:	
  1205                           ;psect for function ___awdiv
  1206                           
  1207  002B                     l1049:	
  1208                           ;incstack = 0
  1209                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1210                           
  1211  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1212  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1213  002D  01AC               	clrf	___awdiv@sign
  1214  002E                     l1051:
  1215  002E  1FA7               	btfss	___awdiv@divisor+1,7
  1216  002F  2831               	goto	u271
  1217  0030  2832               	goto	u270
  1218  0031                     u271:
  1219  0031  2839               	goto	l1057
  1220  0032                     u270:
  1221  0032                     l1053:
  1222  0032  09A6               	comf	___awdiv@divisor,f
  1223  0033  09A7               	comf	___awdiv@divisor+1,f
  1224  0034  0AA6               	incf	___awdiv@divisor,f
  1225  0035  1903               	skipnz
  1226  0036  0AA7               	incf	___awdiv@divisor+1,f
  1227  0037                     l1055:
  1228  0037  01AC               	clrf	___awdiv@sign
  1229  0038  0AAC               	incf	___awdiv@sign,f
  1230  0039                     l1057:
  1231  0039  1FA9               	btfss	___awdiv@dividend+1,7
  1232  003A  283C               	goto	u281
  1233  003B  283D               	goto	u280
  1234  003C                     u281:
  1235  003C  2846               	goto	l1063
  1236  003D                     u280:
  1237  003D                     l1059:
  1238  003D  09A8               	comf	___awdiv@dividend,f
  1239  003E  09A9               	comf	___awdiv@dividend+1,f
  1240  003F  0AA8               	incf	___awdiv@dividend,f
  1241  0040  1903               	skipnz
  1242  0041  0AA9               	incf	___awdiv@dividend+1,f
  1243  0042                     l1061:
  1244  0042  3001               	movlw	1
  1245  0043  00AA               	movwf	??___awdiv
  1246  0044  082A               	movf	??___awdiv,w
  1247  0045  06AC               	xorwf	___awdiv@sign,f
  1248  0046                     l1063:
  1249  0046  01AD               	clrf	___awdiv@quotient
  1250  0047  01AE               	clrf	___awdiv@quotient+1
  1251  0048                     l1065:
  1252  0048  0826               	movf	___awdiv@divisor,w
  1253  0049  0427               	iorwf	___awdiv@divisor+1,w
  1254  004A  1903               	btfsc	3,2
  1255  004B  284D               	goto	u291
  1256  004C  284E               	goto	u290
  1257  004D                     u291:
  1258  004D  2885               	goto	l1085
  1259  004E                     u290:
  1260  004E                     l1067:
  1261  004E  01AB               	clrf	___awdiv@counter
  1262  004F  0AAB               	incf	___awdiv@counter,f
  1263  0050  285C               	goto	l1073
  1264  0051                     l1069:
  1265  0051  3001               	movlw	1
  1266  0052                     u305:
  1267  0052  1003               	clrc
  1268  0053  0DA6               	rlf	___awdiv@divisor,f
  1269  0054  0DA7               	rlf	___awdiv@divisor+1,f
  1270  0055  3EFF               	addlw	-1
  1271  0056  1D03               	skipz
  1272  0057  2852               	goto	u305
  1273  0058                     l1071:
  1274  0058  3001               	movlw	1
  1275  0059  00AA               	movwf	??___awdiv
  1276  005A  082A               	movf	??___awdiv,w
  1277  005B  07AB               	addwf	___awdiv@counter,f
  1278  005C                     l1073:
  1279  005C  1FA7               	btfss	___awdiv@divisor+1,7
  1280  005D  285F               	goto	u311
  1281  005E  2860               	goto	u310
  1282  005F                     u311:
  1283  005F  2851               	goto	l1069
  1284  0060                     u310:
  1285  0060                     l1075:
  1286  0060  3001               	movlw	1
  1287  0061                     u325:
  1288  0061  1003               	clrc
  1289  0062  0DAD               	rlf	___awdiv@quotient,f
  1290  0063  0DAE               	rlf	___awdiv@quotient+1,f
  1291  0064  3EFF               	addlw	-1
  1292  0065  1D03               	skipz
  1293  0066  2861               	goto	u325
  1294  0067  0827               	movf	___awdiv@divisor+1,w
  1295  0068  0229               	subwf	___awdiv@dividend+1,w
  1296  0069  1D03               	skipz
  1297  006A  286D               	goto	u335
  1298  006B  0826               	movf	___awdiv@divisor,w
  1299  006C  0228               	subwf	___awdiv@dividend,w
  1300  006D                     u335:
  1301  006D  1C03               	skipc
  1302  006E  2870               	goto	u331
  1303  006F  2871               	goto	u330
  1304  0070                     u331:
  1305  0070  2878               	goto	l1081
  1306  0071                     u330:
  1307  0071                     l1077:
  1308  0071  0826               	movf	___awdiv@divisor,w
  1309  0072  02A8               	subwf	___awdiv@dividend,f
  1310  0073  0827               	movf	___awdiv@divisor+1,w
  1311  0074  1C03               	skipc
  1312  0075  03A9               	decf	___awdiv@dividend+1,f
  1313  0076  02A9               	subwf	___awdiv@dividend+1,f
  1314  0077                     l1079:
  1315  0077  142D               	bsf	___awdiv@quotient,0
  1316  0078                     l1081:
  1317  0078  3001               	movlw	1
  1318  0079                     u345:
  1319  0079  1003               	clrc
  1320  007A  0CA7               	rrf	___awdiv@divisor+1,f
  1321  007B  0CA6               	rrf	___awdiv@divisor,f
  1322  007C  3EFF               	addlw	-1
  1323  007D  1D03               	skipz
  1324  007E  2879               	goto	u345
  1325  007F                     l1083:
  1326  007F  3001               	movlw	1
  1327  0080  02AB               	subwf	___awdiv@counter,f
  1328  0081  1D03               	btfss	3,2
  1329  0082  2884               	goto	u351
  1330  0083  2885               	goto	u350
  1331  0084                     u351:
  1332  0084  2860               	goto	l1075
  1333  0085                     u350:
  1334  0085                     l1085:
  1335  0085  082C               	movf	___awdiv@sign,w
  1336  0086  1903               	btfsc	3,2
  1337  0087  2889               	goto	u361
  1338  0088  288A               	goto	u360
  1339  0089                     u361:
  1340  0089  288F               	goto	l1089
  1341  008A                     u360:
  1342  008A                     l1087:
  1343  008A  09AD               	comf	___awdiv@quotient,f
  1344  008B  09AE               	comf	___awdiv@quotient+1,f
  1345  008C  0AAD               	incf	___awdiv@quotient,f
  1346  008D  1903               	skipnz
  1347  008E  0AAE               	incf	___awdiv@quotient+1,f
  1348  008F                     l1089:
  1349  008F  082E               	movf	___awdiv@quotient+1,w
  1350  0090  00A7               	movwf	?___awdiv+1
  1351  0091  082D               	movf	___awdiv@quotient,w
  1352  0092  00A6               	movwf	?___awdiv
  1353  0093                     l366:
  1354  0093  0008               	return
  1355  0094                     __end_of___awdiv:
  1356                           
  1357                           	psect	text7
  1358  00F4                     __ptext7:	
  1359 ;; *************** function _isr *****************
  1360 ;; Defined at:
  1361 ;;		line 69 in file "main_lab7.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0
  1377 ;;      Temps:          5       0       0       0       0
  1378 ;;      Totals:         5       0       0       0       0
  1379 ;;Total ram usage:        5 bytes
  1380 ;; Hardware stack levels used: 1
  1381 ;; Hardware stack levels required when called: 1
  1382 ;; This function calls:
  1383 ;;		_RESET_TMR0
  1384 ;;		_mostrar_valor
  1385 ;; This function is called by:
  1386 ;;		Interrupt level 1
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390  00F4                     _isr:	
  1391                           ;psect for function _isr
  1392                           
  1393  00F4                     i1l1269:
  1394                           
  1395                           ;main_lab7.c: 70:     if(INTCONbits.RBIF){
  1396  00F4  1C0B               	btfss	11,0	;volatile
  1397  00F5  28F7               	goto	u37_21
  1398  00F6  28F8               	goto	u37_20
  1399  00F7                     u37_21:
  1400  00F7  290B               	goto	i1l37
  1401  00F8                     u37_20:
  1402  00F8                     i1l1271:
  1403                           
  1404                           ;main_lab7.c: 71:         if(!PORTBbits.RB0)
  1405  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1406  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1407  00FA  1806               	btfsc	6,0	;volatile
  1408  00FB  28FD               	goto	u38_21
  1409  00FC  28FE               	goto	u38_20
  1410  00FD                     u38_21:
  1411  00FD  2903               	goto	i1l38
  1412  00FE                     u38_20:
  1413  00FE                     i1l1273:
  1414                           
  1415                           ;main_lab7.c: 72:             PORTA++;
  1416  00FE  3001               	movlw	1
  1417  00FF  00F5               	movwf	??_isr
  1418  0100  0875               	movf	??_isr,w
  1419  0101  0785               	addwf	5,f	;volatile
  1420  0102  2909               	goto	i1l1277
  1421  0103                     i1l38:	
  1422                           ;main_lab7.c: 73:         else if (!PORTBbits.RB1)
  1423                           
  1424  0103  1886               	btfsc	6,1	;volatile
  1425  0104  2906               	goto	u39_21
  1426  0105  2907               	goto	u39_20
  1427  0106                     u39_21:
  1428  0106  2909               	goto	i1l1277
  1429  0107                     u39_20:
  1430  0107                     i1l1275:
  1431                           
  1432                           ;main_lab7.c: 74:             PORTA--;
  1433  0107  3001               	movlw	1
  1434  0108  0285               	subwf	5,f	;volatile
  1435  0109                     i1l1277:
  1436                           
  1437                           ;main_lab7.c: 75:         INTCONbits.RBIF = 0;
  1438  0109  100B               	bcf	11,0	;volatile
  1439                           
  1440                           ;main_lab7.c: 76:     }
  1441  010A  2925               	goto	i1l43
  1442  010B                     i1l37:	
  1443                           ;main_lab7.c: 77:     else if (INTCONbits.T0IF){
  1444                           
  1445  010B  1D0B               	btfss	11,2	;volatile
  1446  010C  290E               	goto	u40_21
  1447  010D  290F               	goto	u40_20
  1448  010E                     u40_21:
  1449  010E  2925               	goto	i1l43
  1450  010F                     u40_20:
  1451  010F                     i1l1279:
  1452                           
  1453                           ;main_lab7.c: 78:         RESET_TMR0(254);
  1454  010F  30FE               	movlw	254
  1455  0110  120A  118A  2230  120A  118A  	fcall	_RESET_TMR0
  1456  0115                     i1l1281:
  1457                           
  1458                           ;main_lab7.c: 80:         mostrar_valor(display[0],display[1],display[2]);
  1459  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1461  0117  0847               	movf	_display+1,w
  1462  0118  00F5               	movwf	??_isr
  1463  0119  0875               	movf	??_isr,w
  1464  011A  00F0               	movwf	mostrar_valor@DISPLAY1
  1465  011B  0848               	movf	_display+2,w
  1466  011C  00F6               	movwf	??_isr+1
  1467  011D  0876               	movf	??_isr+1,w
  1468  011E  00F1               	movwf	mostrar_valor@DISPLAY2
  1469  011F  0846               	movf	_display,w
  1470  0120  120A  118A  2162  120A  118A  	fcall	_mostrar_valor
  1471  0125                     i1l43:
  1472  0125  0879               	movf	??_isr+4,w
  1473  0126  008A               	movwf	10
  1474  0127  0878               	movf	??_isr+3,w
  1475  0128  0084               	movwf	4
  1476  0129  0E77               	swapf	??_isr+2,w
  1477  012A  0083               	movwf	3
  1478  012B  0EFE               	swapf	btemp,f
  1479  012C  0E7E               	swapf	btemp,w
  1480  012D  0009               	retfie
  1481  012E                     __end_of_isr:
  1482                           
  1483                           	psect	intentry
  1484  0004                     __pintentry:	
  1485                           ;incstack = 0
  1486                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1487                           
  1488  0004                     interrupt_function:
  1489  007E                     saved_w	set	btemp
  1490  0004  00FE               	movwf	btemp
  1491  0005  0E03               	swapf	3,w
  1492  0006  00F7               	movwf	??_isr+2
  1493  0007  0804               	movf	4,w
  1494  0008  00F8               	movwf	??_isr+3
  1495  0009  080A               	movf	10,w
  1496  000A  00F9               	movwf	??_isr+4
  1497  000B  120A  118A  28F4   	ljmp	_isr
  1498                           
  1499                           	psect	text8
  1500  0162                     __ptext8:	
  1501 ;; *************** function _mostrar_valor *****************
  1502 ;; Defined at:
  1503 ;;		line 172 in file "main_lab7.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  DISPLAY0        1    wreg     unsigned char 
  1506 ;;  DISPLAY1        1    0[COMMON] unsigned char 
  1507 ;;  DISPLAY2        1    1[COMMON] unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  DISPLAY0        1    4[COMMON] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1519 ;;      Params:         2       0       0       0       0
  1520 ;;      Locals:         1       0       0       0       0
  1521 ;;      Temps:          2       0       0       0       0
  1522 ;;      Totals:         5       0       0       0       0
  1523 ;;Total ram usage:        5 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; This function calls:
  1526 ;;		Nothing
  1527 ;; This function is called by:
  1528 ;;		_isr
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532  0162                     _mostrar_valor:	
  1533                           ;psect for function _mostrar_valor
  1534                           
  1535                           
  1536                           ;incstack = 0
  1537                           ; Regs used in _mostrar_valor: [wreg-fsr0h+status,2+status,0]
  1538                           ;mostrar_valor@DISPLAY0 stored from wreg
  1539  0162  00F4               	movwf	mostrar_valor@DISPLAY0
  1540  0163                     i1l1099:
  1541                           
  1542                           ;main_lab7.c: 174:     PORTDbits.RD0 = 0;
  1543  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0165  1008               	bcf	8,0	;volatile
  1546                           
  1547                           ;main_lab7.c: 175:     PORTDbits.RD1 = 0;
  1548  0166  1088               	bcf	8,1	;volatile
  1549                           
  1550                           ;main_lab7.c: 176:     PORTDbits.RD2 = 0;
  1551  0167  1108               	bcf	8,2	;volatile
  1552                           
  1553                           ;main_lab7.c: 178:     switch (banderas)
  1554  0168  2980               	goto	i1l1133
  1555  0169                     i1l1101:
  1556                           
  1557                           ;main_lab7.c: 181:             PORTC = DISPLAY0;
  1558  0169  0874               	movf	mostrar_valor@DISPLAY0,w
  1559  016A  0087               	movwf	7	;volatile
  1560  016B                     i1l1103:
  1561                           
  1562                           ;main_lab7.c: 182:             PORTDbits.RD0 = 1;
  1563  016B  1408               	bsf	8,0	;volatile
  1564  016C                     i1l1105:
  1565                           
  1566                           ;main_lab7.c: 183:             banderas = 1;
  1567  016C  01FA               	clrf	_banderas
  1568  016D  0AFA               	incf	_banderas,f
  1569  016E  2993               	goto	i1l90
  1570  016F                     i1l1109:
  1571                           
  1572                           ;main_lab7.c: 186:             PORTC = DISPLAY1;
  1573  016F  0870               	movf	mostrar_valor@DISPLAY1,w
  1574  0170  0087               	movwf	7	;volatile
  1575  0171                     i1l1111:
  1576                           
  1577                           ;main_lab7.c: 187:             PORTDbits.RD1 = 1;
  1578  0171  1488               	bsf	8,1	;volatile
  1579                           
  1580                           ;main_lab7.c: 188:             banderas = 2;
  1581  0172  3002               	movlw	2
  1582  0173  00F2               	movwf	??_mostrar_valor
  1583  0174  0872               	movf	??_mostrar_valor,w
  1584  0175  00FA               	movwf	_banderas
  1585  0176  2993               	goto	i1l90
  1586  0177                     i1l1115:
  1587                           
  1588                           ;main_lab7.c: 191:             PORTC = DISPLAY2;
  1589  0177  0871               	movf	mostrar_valor@DISPLAY2,w
  1590  0178  0087               	movwf	7	;volatile
  1591  0179                     i1l1117:
  1592                           
  1593                           ;main_lab7.c: 192:             PORTDbits.RD2 = 1;
  1594  0179  1508               	bsf	8,2	;volatile
  1595  017A                     i1l1119:
  1596                           
  1597                           ;main_lab7.c: 193:             banderas = 0;
  1598  017A  01FA               	clrf	_banderas
  1599  017B  2993               	goto	i1l90
  1600  017C                     i1l1123:
  1601                           
  1602                           ;main_lab7.c: 196:             PORTC = 0b10000000;
  1603  017C  3080               	movlw	128
  1604  017D  0087               	movwf	7	;volatile
  1605  017E                     i1l1125:
  1606                           
  1607                           ;main_lab7.c: 197:             PORTDbits.RD0 = 1;
  1608  017E  1408               	bsf	8,0	;volatile
  1609  017F  297A               	goto	i1l1119
  1610  0180                     i1l1133:
  1611  0180  087A               	movf	_banderas,w
  1612  0181  00F2               	movwf	??_mostrar_valor
  1613  0182  01F3               	clrf	??_mostrar_valor+1
  1614                           
  1615                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1616                           ; Switch size 1, requested type "simple"
  1617                           ; Number of cases is 1, Range of values is 0 to 0
  1618                           ; switch strategies available:
  1619                           ; Name         Instructions Cycles
  1620                           ; simple_byte            4     3 (average)
  1621                           ; direct_byte           11     8 (fixed)
  1622                           ; jumptable            260     6 (fixed)
  1623                           ;	Chosen strategy is simple_byte
  1624  0183  0873               	movf	??_mostrar_valor+1,w
  1625  0184  3A00               	xorlw	0	; case 0
  1626  0185  1903               	skipnz
  1627  0186  2988               	goto	i1l1323
  1628  0187  297C               	goto	i1l1123
  1629  0188                     i1l1323:
  1630                           
  1631                           ; Switch size 1, requested type "simple"
  1632                           ; Number of cases is 3, Range of values is 0 to 2
  1633                           ; switch strategies available:
  1634                           ; Name         Instructions Cycles
  1635                           ; simple_byte           10     6 (average)
  1636                           ; direct_byte           17     8 (fixed)
  1637                           ; jumptable            260     6 (fixed)
  1638                           ;	Chosen strategy is simple_byte
  1639  0188  0872               	movf	??_mostrar_valor,w
  1640  0189  3A00               	xorlw	0	; case 0
  1641  018A  1903               	skipnz
  1642  018B  2969               	goto	i1l1101
  1643  018C  3A01               	xorlw	1	; case 1
  1644  018D  1903               	skipnz
  1645  018E  296F               	goto	i1l1109
  1646  018F  3A03               	xorlw	3	; case 2
  1647  0190  1903               	skipnz
  1648  0191  2977               	goto	i1l1115
  1649  0192  297C               	goto	i1l1123
  1650  0193                     i1l90:
  1651  0193  0008               	return
  1652  0194                     __end_of_mostrar_valor:
  1653                           
  1654                           	psect	text9
  1655  0230                     __ptext9:	
  1656 ;; *************** function _RESET_TMR0 *****************
  1657 ;; Defined at:
  1658 ;;		line 105 in file "main_lab7.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  TMR_VAR         1    wreg     unsigned char 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  TMR_VAR         1    0[COMMON] unsigned char 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         0       0       0       0       0
  1673 ;;      Locals:         1       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0
  1675 ;;      Totals:         1       0       0       0       0
  1676 ;;Total ram usage:        1 bytes
  1677 ;; Hardware stack levels used: 1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_isr
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685  0230                     _RESET_TMR0:	
  1686                           ;psect for function _RESET_TMR0
  1687                           
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _RESET_TMR0: [wreg]
  1691                           ;RESET_TMR0@TMR_VAR stored from wreg
  1692  0230  00F0               	movwf	RESET_TMR0@TMR_VAR
  1693  0231                     i1l1093:
  1694                           
  1695                           ;main_lab7.c: 106:     TMR0 = TMR_VAR;
  1696  0231  0870               	movf	RESET_TMR0@TMR_VAR,w
  1697  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0234  0081               	movwf	1	;volatile
  1700  0235                     i1l1095:
  1701                           
  1702                           ;main_lab7.c: 107:     INTCONbits.T0IF = 0;
  1703  0235  110B               	bcf	11,2	;volatile
  1704  0236                     i1l54:
  1705  0236  0008               	return
  1706  0237                     __end_of_RESET_TMR0:
  1707  007E                     btemp	set	126	;btemp
  1708  007E                     wtemp0	set	126
  1709                           
  1710                           	psect	idloc
  1711                           
  1712                           ;Config register IDLOC0 @ 0x2000
  1713                           ;	unspecified, using default values
  1714  2000                     	org	8192
  1715  2000  3FFF               	dw	16383
  1716                           
  1717                           ;Config register IDLOC1 @ 0x2001
  1718                           ;	unspecified, using default values
  1719  2001                     	org	8193
  1720  2001  3FFF               	dw	16383
  1721                           
  1722                           ;Config register IDLOC2 @ 0x2002
  1723                           ;	unspecified, using default values
  1724  2002                     	org	8194
  1725  2002  3FFF               	dw	16383
  1726                           
  1727                           ;Config register IDLOC3 @ 0x2003
  1728                           ;	unspecified, using default values
  1729  2003                     	org	8195
  1730  2003  3FFF               	dw	16383
  1731                           
  1732                           	psect	config
  1733                           
  1734                           ;Config register CONFIG1 @ 0x2007
  1735                           ;	Oscillator Selection bits
  1736                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1737                           ;	Watchdog Timer Enable bit
  1738                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1739                           ;	Power-up Timer Enable bit
  1740                           ;	PWRTE = OFF, PWRT disabled
  1741                           ;	RE3/MCLR pin function select bit
  1742                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1743                           ;	Code Protection bit
  1744                           ;	CP = OFF, Program memory code protection is disabled
  1745                           ;	Data Code Protection bit
  1746                           ;	CPD = OFF, Data memory code protection is disabled
  1747                           ;	Brown Out Reset Selection bits
  1748                           ;	BOREN = OFF, BOR disabled
  1749                           ;	Internal External Switchover bit
  1750                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1751                           ;	Fail-Safe Clock Monitor Enabled bit
  1752                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1753                           ;	Low Voltage Programming Enable bit
  1754                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1755                           ;	In-Circuit Debugger Mode bit
  1756                           ;	DEBUG = 0x1, unprogrammed default
  1757  2007                     	org	8199
  1758  2007  20D4               	dw	8404
  1759                           
  1760                           ;Config register CONFIG2 @ 0x2008
  1761                           ;	Brown-out Reset Selection bit
  1762                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1763                           ;	Flash Program Memory Self Write Enable bits
  1764                           ;	WRT = OFF, Write protection off
  1765  2008                     	org	8200
  1766  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     22      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_mostrar_valor

Critical Paths under _main in BANK0

    _main->_obtener_valor
    _obtener_valor->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1376
                                             20 BANK0      2     2      0
                      _obtener_valor
                        _set_display
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_display                                          4     2      2     218
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _obtener_valor                                        5     5      0    1158
                                             15 BANK0      5     5      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     240
                                              5 COMMON     5     5      0
                         _RESET_TMR0
                      _mostrar_valor
 ---------------------------------------------------------------------------------
 (4) _mostrar_valor                                        5     3      2     218
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _RESET_TMR0                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _obtener_valor
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _set_display
   _setup

 _isr (ROOT)
   _RESET_TMR0
   _mostrar_valor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      38      12        0.0%
ABS                  0      0      38       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Apr 06 16:33:39 2022

                      pc 0002           ___bmul@product 0022                       l48 01C0  
                     l57 00F3                       l85 01F5             ___awdiv@sign 002C  
                     fsr 0004      ___wmul@multiplicand 0022                      l213 01A2  
                    l215 01BA                      l127 0161                      l239 020C  
                    l366 0093                      u210 019C                      u211 019B  
                    u310 0060                      u311 005F                      u240 01B6  
                    u305 0052                      u241 01B5                      u225 01A3  
                    u330 0071                      u250 01FE                      u331 0070  
                    u251 01FD                      u235 01AA                      u260 020B  
                    u325 0061                      u261 020A                      u350 0085  
                    u270 0032                      u351 0084                      u335 006D  
                    u271 0031                      u360 008A                      u280 003D  
                    u361 0089                      u345 0079                      u281 003C  
                    u290 004E                      u291 004D                      _isr 00F4  
                    fsr0 0004                      indf 0000          ??_mostrar_valor 0072  
                   l1021 0194                     l1031 01B6                     l1023 0198  
                   l1041 0202                     l1025 019C                     l1051 002E  
                   l1043 0204                     l1035 01F9                     l1027 01A9  
                   l1061 0042                     l1053 0032                     l1045 020B  
                   l1037 01FA                     l1029 01B0                     l1141 012E  
                   l1071 0058                     l1063 0046                     l1055 0037  
                   l1039 01FE                     l1151 013D                     l1143 0132  
                   l1081 0078                     l1073 005C                     l1065 0048  
                   l1057 0039                     l1049 002B                     l1161 014D  
                   l1153 0140                     l1145 0138                     l1083 007F  
                   l1075 0060                     l1067 004E                     l1059 003D  
                   l1171 0154                     l1163 014E                     l1155 0143  
                   l1147 0139                     l1077 0071                     l1069 0051  
                   l1085 0085                     l1181 015F                     l1173 0158  
                   l1165 0150                     l1157 0146                     l1149 013A  
                   l1087 008A                     l1079 0077                     l1183 0160  
                   l1175 0159                     l1167 0151                     l1159 0149  
                   l1089 008F                     l1185 0097                     l1177 015A  
                   l1169 0152                     l1187 01DF                     l1179 015E  
                   l1285 01BB                     l1287 01C8                     ?_isr 0070  
                   _IOCB 0096                     i1l43 0125                     i1l37 010B  
                   i1l54 0236                     i1l38 0103                     i1l90 0193  
                   _TMR0 0001                     _WPUB 0095                     _main 01BB  
                   btemp 007E                     start 000E        ___bmul@multiplier 0023  
            ?_RESET_TMR0 0070                    ??_isr 0075                    ?_main 0070  
        __end_of___awdiv 0094                    _ANSEL 0188          ___awdiv@divisor 0026  
                  _TABLA 0036          ___awdiv@counter 002B                    u40_20 010F  
                  u40_21 010E                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    u37_20 00F8                    u37_21 00F7  
                  u38_20 00FE                    u38_21 00FD                    u39_20 0107  
                  u39_21 0106                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _setup 012E  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 01DC                   ??_main 0034  
       ___awdiv@dividend 0028                   ?_setup 0070                   _ANSELH 0189  
                 i1l1101 0169                   i1l1111 0171                   i1l1103 016B  
                 i1l1105 016C                   i1l1123 017C                   i1l1115 0177  
                 i1l1125 017E                   i1l1117 0179                   i1l1109 016F  
                 i1l1133 0180                   i1l1119 017A                   i1l1323 0188  
                 i1l1093 0231                   i1l1095 0235                   i1l1271 00F8  
                 i1l1281 0115                   i1l1273 00FE                   i1l1099 0163  
                 i1l1275 0107                   i1l1277 0109                   i1l1269 00F4  
                 i1l1279 010F             ?_set_display 0020                   ___bmul 01F6  
                 ___wmul 0194                ??___awdiv 002A                   _conteo 007B  
       ___awdiv@quotient 002D                   saved_w 007E        RESET_TMR0@TMR_VAR 0070  
__end_of__initialization 0027      ___bmul@multiplicand 0020           __pcstackCOMMON 0070  
           __pidataBANK0 0220            __end_of_setup 0162           _OPTION_REGbits 0081  
                ??_setup 0020               __pbssBANK0 0046      set_display@VALORES0 0023  
    set_display@VALORES1 0020      set_display@VALORES2 0021             ??_RESET_TMR0 0070  
             __pmaintext 01BB                  ?___bmul 0020                  ?___wmul 0020  
             __pintentry 0004       __end_of_RESET_TMR0 0237    __end_of_mostrar_valor 0194  
                ___awdiv 002B    mostrar_valor@DISPLAY0 0074    mostrar_valor@DISPLAY1 0070  
  mostrar_valor@DISPLAY2 0071                  __ptext1 012E                  __ptext2 01DC  
                __ptext3 0094                  __ptext4 0194                  __ptext5 01F6  
                __ptext6 002B                  __ptext7 00F4                  __ptext8 0162  
                __ptext9 0230                  _display 0046            _obtener_valor 0094  
                _valores 0049     end_of_initialization 0027                _PORTBbits 0006  
              _PORTDbits 0008           ?_obtener_valor 0070           __end_of___bmul 020D  
         __end_of___wmul 01BB      start_initialization 0011              __end_of_isr 012E  
               ??___bmul 0021                 ??___wmul 0024               init_fetch0 020D  
            __pdataBANK0 0036          ??_obtener_valor 002F              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0026  
      interrupt_function 0004           ___wmul@product 0024            ??_set_display 0022  
      ___wmul@multiplier 0020      __end_of_set_display 01F6                 _banderas 007A  
     obtener_valor@VALOR 0033            _mostrar_valor 0162               _INTCONbits 000B  
               init_ram0 0211           ?_mostrar_valor 0070                 intlevel1 0000  
            _set_display 01DC               _OSCCONbits 008F               _RESET_TMR0 0230  
  __end_of_obtener_valor 00F4  
